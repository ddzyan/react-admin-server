{"version":3,"sources":["api/ajax.js","api/index.js","utils/storageUtils.js","redux/actions.js","redux/action-types.js","pages/login/login.jsx","pages/home/home.jsx","components/link-button/index.jsx","pages/category/add-form.jsx","pages/category/update-form.jsx","pages/category/category.jsx","pages/charts/bar.jsx","pages/charts/line.jsx","pages/charts/pie.jsx","pages/order/order.jsx","config/constantConfig.js","pages/product/pictures-wall.jsx","pages/product/rich-text-editor.jsx","pages/product/add-update.jsx","pages/product/detail.jsx","pages/product/home.jsx","pages/product/product.jsx","utils/dateUtils.js","pages/role/add-form.jsx","config/memuConfig.js","pages/role/auth-form.jsx","pages/role/role.jsx","pages/user/user-form.jsx","pages/user/user.jsx","pages/not-fount/not-found.jsx","components/left-nav/index.jsx","components/header/index.jsx","pages/admin/admin.jsx","app.jsx","redux/reducers.js","redux/store.js","index.js","assets/images/logo.png"],"names":["instance","url","data","method","Promise","resolve","reject","axios","create","timeout","auth","get","params","post","then","response","catch","err","message","error","login","username","password","a","ajax","addCategory","categoryName","parentId","updateCategory","categoryId","getCategory","getCategoryInfo","updateProductStatus","productId","status","getProductList","pageNum","pageSize","searchProductList","searchName","searchType","delProduct","_id","deleteImg","name","AddOrUpdateProduct","pCategoryId","desc","price","detail","imgs","getRoleList","addRole","roleName","updateRole","menus","auth_time","auth_name","getUserList","addOrUpdateUser","user","deleteUser","userId","getWeather","city","jsonp","results","weather_data","dayPictureUrl","weather","store","require","set","remove","setHeadTitle","headTitle","type","reciverUser","resetUser","storageUtils","Item","Login","handleSubmit","e","preventDefault","props","form","validateFields","value","userLogin","validator","rule","callback","length","test","this","to","getFieldDecorator","className","src","logo","alt","errorMessage","onSubmit","rules","required","whitespace","min","max","prefix","style","color","placeholder","htmlType","Component","WrapLogin","connect","state","dispatch","msg","Home","LinkButton","Option","AddForm","setForm","categorys","initialValue","map","item","index","key","pattern","WrapAddForm","UpdateForm","WrapUpdateForm","Category","loading","selectCategory","subCategorys","parentName","modalVisible","showSubCategorys","setState","getCategorys","initColumns","columns","title","dataIndex","width","render","category","onClick","showUpdateModal","result","Object","is","showAddModal","showCategorys","closeModal","resetFields","success","marginRight","extra","cancelText","okText","visible","onOk","onCancel","bordered","pagination","defaultPageSize","showQuickJumper","dataSource","rowKey","Bar","sales","stores","getOption","text","tooltip","legend","xAxis","yAxis","series","update","option","Line","Pie","subtext","x","trigger","formatter","orient","left","radius","center","itemStyle","emphasis","shadowBlur","shadowOffsetX","shadowColor","getOption2","backgroundColor","top","textStyle","visualMap","show","inRange","colorLightness","sort","b","roseType","label","normal","labelLine","lineStyle","smooth","length2","animationType","animationEasing","animationDelay","idx","Math","random","Order","PAGE_SIZE","BASE_IMG_URL","getBase64","file","reader","FileReader","readAsDataURL","onload","onerror","PicturesWall","handleCancel","previewVisible","handlePreview","preview","originFileObj","previewImage","handleChange","fileList","event","getFileList","forEach","push","uid","uploadButton","action","listType","accept","onPreview","onChange","footer","React","RichTextEditor","onEditorStateChange","editorState","getDetail","draftToHtml","convertToRaw","getCurrentContent","uploadImageCallBack","xhr","XMLHttpRequest","open","FormData","append","send","addEventListener","JSON","parse","responseText","console","log","link","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","EditorState","createWithContent","createEmpty","wrapperClassName","editorClassName","editorStyle","minHeight","border","paddingLeft","toolbar","image","uploadCallback","present","mandatory","TextArea","ProductAddUpdate","options","initOptions","product","isUpdate","childOptions","find","children","isLeaf","loadData","selectedOptions","targetOption","submit","pw","current","editor","history","goBack","validatePrice","Number","parseInt","createRef","location","categoryIds","fontSize","labelCol","span","wrapperCol","autosize","maxRows","minRows","addonAfter","ref","WrapProductAddUpdate","ProductDetail","subCategoryName","all","responses","dangerouslySetInnerHTML","__html","ProductHome","total","products","searchValue","getProducts","list","defaultValue","margin","target","trim","Product","path","component","exact","formateDate","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","menuList","icon","isPublic","TreeNode","AuthForm","getMenus","checkedKeys","onCheck","info","getTreeNodes","reduce","pre","role","treeNodes","nextProps","disabled","defaultExpandAll","checkable","onSelect","PureComponent","Role","roles","onRow","authRole","authForm","param","now","assign","role_id","marginLeft","rowSelection","selectedRowKeys","record","UserForm","fromStyle","phone","email","User","users","roleNames","showModal","onConfirm","delUser","initRoleNames","Map","submint","NotFound","clickHandle","replace","SubMenu","LeftNav","hasAuth","indexOf","getMenuNodes","pathname","citem","openKey","menuNodes","theme","mode","selectedKeys","defaultOpenKeys","withRouter","confirm","Header","currentDate","recursiveQueryTitle","getTitle","memu","loginOut","getTime","clearInterval","dateTimer","setInterval","WrapHeader","Footer","Sider","Content","Admin","from","textAlign","App","initUser","combineReducers","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById","module","exports"],"mappings":"udAeIA,EAAW,KASA,WAASC,GAAiC,IAA5BC,EAA2B,uDAApB,GAAIC,EAAgB,uDAAP,MAC/C,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAEtBN,IACHA,EAAWO,IAAMC,OAAO,CAEtBC,QAAS,IACTC,KAfG,SAkBQ,QAAXP,EACQH,EAASW,IAAIV,EAAK,CAC1BW,OAAQV,IAGAF,EAASa,KAAKZ,EAAKC,IAI5BY,MAAK,SAAAC,GACJV,EAAQU,EAASb,SAElBc,OAAM,SAAAC,GACLC,EAAA,EAAQC,MAAMF,EAAIC,gB,8NCzCnB,IAAME,EAAK,uCAAG,WAAOC,EAAUC,GAAjB,SAAAC,EAAA,+EACnBC,EAAK,SAAU,CAAEH,WAAUC,YAAY,SADpB,2CAAH,wDAILG,EAAc,SAACC,EAAcC,GAAf,OACzBH,EAAK,uBAAwB,CAAEE,eAAcC,YAAY,SAE9CC,EAAiB,SAACF,EAAcG,GAAf,OAC5BL,EAAK,0BAA2B,CAAEE,eAAcG,cAAc,SAGnDC,EAAc,SAAAH,GAAQ,OACjCH,EAAK,wBAAyB,CAAEG,YAAY,QAGjCI,EAAe,uCAAG,WAAMF,GAAN,SAAAN,EAAA,+EAC7BC,EAAK,wBAAyB,CAAEK,cAAc,QADjB,2CAAH,sDAIfG,EAAmB,uCAAG,WAAOC,EAAWC,GAAlB,SAAAX,EAAA,+EACjCC,EAAK,+BAAgC,CAAES,YAAWC,UAAU,SAD3B,2CAAH,wDAQnBC,EAAiB,SAACC,EAASC,GAAV,OAC5Bb,EAAK,uBAAwB,CAAEY,UAASC,YAAY,QAGzCC,EAAoB,SAACF,EAASC,EAAUE,EAAYC,GAAhC,OAC/BhB,EACE,yBADE,aAEAY,UAASC,YAAWG,EAAaD,GACnC,QAISE,EAAa,SAAAC,GAAG,OAC3BlB,EAAK,yBAA0B,CAAEkB,OAAO,SAG7BC,EAAY,SAAAC,GAAI,OAAIpB,EAAK,qBAAsB,CAAEoB,QAAQ,SAGzDC,EAAqB,SAAC,GAAD,IAChCH,EADgC,EAChCA,IACAb,EAFgC,EAEhCA,WACAiB,EAHgC,EAGhCA,YACAF,EAJgC,EAIhCA,KACAG,EALgC,EAKhCA,KACAC,EANgC,EAMhCA,MACAC,EAPgC,EAOhCA,OACAC,EARgC,EAQhCA,KARgC,OAUhC1B,EAAK,mBAAD,OACiBkB,EAAM,SAAW,OACpC,CAAEA,MAAKb,aAAYiB,cAAaF,OAAMG,OAAMC,QAAOC,SAAQC,QAC3D,SAISC,EAAc,kBAAM3B,EAAK,oBAAqB,GAAI,QAGlD4B,EAAU,SAAAC,GAAQ,OAC7B7B,EAAK,mBAAoB,CAAE6B,YAAY,SAG5BC,EAAa,SAAC,GAAD,IAAGZ,EAAH,EAAGA,IAAKa,EAAR,EAAQA,MAAOC,EAAf,EAAeA,UAAWC,EAA1B,EAA0BA,UAA1B,OACxBjC,EAAK,sBAAuB,CAAEkB,MAAKa,QAAOC,YAAWC,aAAa,SAGvDC,EAAc,kBAAMlC,EAAK,oBAAqB,GAAI,QAGlDmC,EAAkB,SAAAC,GAAI,OACjCpC,EAAK,gBAAD,OAAiBoC,EAAKlB,IAAM,SAAW,O,yVAAvC,IAAqDkB,GAAQ,SAGtDC,EAAa,SAAAC,GAAM,OAC9BtC,EAAK,sBAAuB,CAAEsC,UAAU,SAG7BC,EAAa,SAAAC,GACxB,OAAO,IAAI5D,SAAQ,SAACC,EAASC,GAC3B,IAAML,EAAG,kEAA8D+D,EAA9D,4CACTC,IAAMhE,EAAK,IAAI,SAACgB,EAAKf,GACnB,GAAKe,GAAsB,IAAff,EAAKiB,MAIfD,EAAA,EAAQC,MAAM,wDAJc,CAAC,IAAD,EACOjB,EAAKgE,QAAQ,GAAGC,aAAa,GAAxDC,EADoB,EACpBA,cAAeC,EADK,EACLA,QACvBhE,EAAQ,CAAE+D,gBAAeC,oBCjG3BC,EAAQC,EAAQ,KAGP,WACJX,GACPU,EAAME,IAHM,WAGOZ,IAFR,aAKX,OAAOU,EAAM3D,IAND,aAMiB,IALlB,aAQX2D,EAAMG,OATM,aCUHC,EAAe,SAAAC,GAAS,MAAK,CAAEC,KCRd,iBDQoCD,cAKrDE,GAAc,SAAAjB,GAAI,MAAK,CAAEgB,KCZV,eDY8BhB,SAa5CkB,GAAY,WAExB,OADAC,IACO,CAACH,KCzBgB,e,qBCElBI,I,WAAAA,MAEFC,G,2MAOJC,aAAe,SAAAC,GACbA,EAAEC,iBACF,EAAKC,MAAMC,KAAKC,gBAAe,SAACpE,EAAOqE,GACrC,GAAKrE,EAUHD,EAAA,EAAQC,MAAM,gCAVJ,CAAC,IACHE,EAAuBmE,EAAvBnE,SAAUC,EAAakE,EAAblE,SAElB,EAAK+D,MAAMI,UAAUpE,EAAUC,Q,EAiBrCoE,UAAY,SAACC,EAAMH,EAAOI,GACnBJ,EAEMA,EAAMK,OAAS,GACxBD,EAAS,gDACAJ,EAAMK,OAAS,EACxBD,EAAS,+CACC,kBAAkBE,KAAKN,GAGjCI,IAFAA,EAAS,wFANTA,EAAS,yC,wEAkBX,IAAMhC,EAAOmC,KAAKV,MAAMzB,KACxB,GAAIA,GAAQA,EAAKlB,IACf,OAAO,kBAAC,IAAD,CAAUsD,GAAG,UARf,IAWCC,EAAsBF,KAAKV,MAAMC,KAAjCW,kBACR,OACE,yBAAKC,UAAU,SACb,4BAAQA,UAAU,eAChB,yBAAKC,IAAKC,KAAMC,IAAI,SACpB,2EAEF,6BAASH,UAAU,iBACjB,yBAAKA,UAAYtC,EAAK0C,aAA6B,iBAAd,aAClC1C,EAAK0C,cAER,4CACA,uBAAMC,SAAUR,KAAKb,aAAcgB,UAAU,cAC3C,kBAAClB,GAAD,KACGiB,EAAkB,WAAY,CAC7BO,MAAO,CACL,CACEC,UAAU,EACVC,YAAY,EACZxF,QAAS,8CAEX,CAAEyF,IAAK,EAAGzF,QAAS,2DACnB,CAAE0F,IAAK,GAAI1F,QAAS,8DARvB+E,CAWC,uBACEY,OACE,uBAAMjC,KAAK,OAAOkC,MAAO,CAAEC,MAAO,qBAEpCC,YAAY,yBAIlB,kBAAChC,GAAD,KACGiB,EAAkB,WAAY,CAC7BO,MAAO,CAAC,CAAEd,UAAWK,KAAKL,aAD3BO,CAGC,uBACEY,OACE,uBAAMjC,KAAK,OAAOkC,MAAO,CAAEC,MAAO,qBAEpCnC,KAAK,WACLoC,YAAY,mBAIlB,kBAAChC,GAAD,KACE,uBACEJ,KAAK,UACLqC,SAAS,SACTf,UAAU,qBAHZ,wB,GAtGMgB,aAqHdC,GAAY,IAAK3G,QAAL,CAAcyE,IAEjBmC,gBACb,SAAAC,GAAK,MAAK,CAAEzD,KAAMyD,EAAMzD,QACxB,CAAE6B,UF3FqB,SAACpE,EAAUC,GAClC,8CAAO,WAAMgG,GAAN,iBAAA/F,EAAA,sEAEkBH,EAAMC,EAAUC,GAFlC,QAECP,EAFD,SAG+B,IAApBA,EAASmB,QACjB0B,EAAO7C,EAASb,KAEtB6E,EAAsBnB,GACtB0D,EAASzC,GAAYjB,KAGrB0D,EA9BkC,CAAE1C,KChBlB,WDgBkC0B,aA8BnCvF,EAASwG,MAVvB,2CAAP,mDAAM,KEwFOH,CAGbD,I,mBC3HaK,I,yNANbH,MAAQ,G,wEAEN,OAAO,yBAAKnB,UAAU,QAAf,mD,GAHQgB,c,qECAJ,SAASO,GAAWpC,GACjC,OAAO,4CAAYA,EAAZ,CAAmBa,UAAU,gB,oBCAhClB,GAAO,IAAKA,KACZ0C,GAAS,KAAOA,OAEhBC,G,2MACJN,MAAQ,G,2FASNtB,KAAKV,MAAMuC,QAAQ7B,KAAKV,MAAMC,Q,+BAGtB,IAAD,EAKHS,KAAKV,MAHCY,EAFH,EAELX,KAAQW,kBACR4B,EAHK,EAGLA,UACAlG,EAJK,EAILA,SAEF,OACE,2BACE,kBAAC,GAAD,KACGsE,EAAkB,WAAY,CAAE6B,aAAcnG,GAA9CsE,CACC,4BACE,kBAACyB,GAAD,CAAQlC,MAAM,KAAd,wCACCqC,EAAUE,KAAI,SAACC,EAAMC,GAAP,OACb,kBAACP,GAAD,CAAQQ,IAAKD,EAAOzC,MAAOwC,EAAKtF,KAC7BsF,EAAKpF,YAMhB,kBAAC,GAAD,KACGqD,EAAkB,eAAgB,CACjC6B,aAAc,GACdtB,MAAO,CACL,CAAEC,UAAU,EAAMvF,QAAS,oDAC3B,CACE0F,IAAK,GACL1F,QAAS,4DAEX,CAAEiH,QAAS,qBAAsBjH,QAAS,4DAR7C+E,CAUE,uBAAOe,YAAY,sD,GA5CVE,aAqDPkB,GAFK,IAAK5H,QAAL,CAAcmH,ICtD5B3C,GAAO,IAAKA,KACZqD,G,2MACJhB,MAAQ,G,2FAQNtB,KAAKV,MAAMuC,QAAQ7B,KAAKV,MAAMC,Q,+EAO9B,IAAM5D,EAAeqE,KAAKV,MAAM3D,aACxBuE,EAAsBF,KAAKV,MAAMC,KAAjCW,kBACR,OACE,2BACE,kBAAC,GAAD,KACGA,EAAkB,eAAgB,CACjC6B,aAAcpG,EACd8E,MAAO,CACL,CAAEC,UAAU,EAAMvF,QAAS,oDAC3B,CAAE0F,IAAK,GAAI1F,QAAS,4DACpB,CAAEiH,QAAS,qBAAsBjH,QAAS,4DAL7C+E,CAOE,uBAAOe,YAAY,sD,GA5BPE,aAqCVoB,GAFQ,IAAK9H,QAAL,CAAc6H,ICsOtBE,G,2MArQblB,MAAQ,CACNmB,SAAS,EACTC,eAAgB,GAChBZ,UAAW,GACXa,aAAc,GACd/G,SAAU,IACVgH,WAAY,GACZC,aAAc,G,EAahBC,iBAAmB,YAAoB,IAAjBnG,EAAgB,EAAhBA,IAAKE,EAAW,EAAXA,KACzB,EAAKkG,SACH,CACEnH,SAAUe,EACViG,WAAY/F,IAEd,WACE,EAAKmG,mB,EASXC,YAAc,WACZ,EAAKC,QAAU,CACb,CACEC,MAAO,2BACPC,UAAW,QAEb,CACED,MAAO,eACPE,MAAO,IACPC,OAAQ,SAAAC,GAAQ,OACd,8BACE,kBAAC7B,GAAD,CAAY8B,QAAS,kBAAM,EAAKC,gBAAgBF,KAAhD,4BAGyB,MAAxB,EAAKjC,MAAM1F,SACV,kBAAC8F,GAAD,CAAY8B,QAAS,kBAAM,EAAKV,iBAAiBS,KAAjD,kCAIA,Q,EASZP,a,uCAAe,WAAMpH,GAAN,iBAAAJ,EAAA,6DACbI,EAAWA,GAAY,EAAK0F,MAAM1F,SADrB,SAEQG,EAAYH,GAFpB,QAEP8H,EAFO,SAGmB,IAAlBA,EAAOvH,QACb2F,EAAY4B,EAAOvJ,KACrBwJ,OAAOC,GAAGhI,EAAU,KACtB,EAAKmH,SAAS,CACZN,SAAS,EACTX,cAGF,EAAKiB,SAAS,CACZN,SAAS,EACTE,aAAcb,KAIlB3G,EAAA,EAAQC,MAAM,oDAjBH,2C,wDA0BfqI,gBAAkB,SAAAF,GAChB,EAAKb,eAAiBa,EACtB,EAAKR,SAAS,CACZF,aAAc,K,EAKlBgB,aAAe,WACb,EAAKd,SAAS,CACZF,aAAc,K,EAKlBiB,cAAgB,WACd,EAAKf,SAAS,CACZJ,aAAc,GACd/G,SAAU,IACVgH,WAAY,M,EAKhBmB,WAAa,WACX,EAAKxE,KAAKyE,cACV,EAAKjB,SAAS,CACZF,aAAc,K,EASlBnH,YAAc,WACZ,EAAK6D,KAAKC,eAAV,uCAAyB,WAAOpE,EAAOqE,GAAd,iBAAAjE,EAAA,yDAClBJ,EADkB,wBAEbQ,EAA2B6D,EAA3B7D,SAAUD,EAAiB8D,EAAjB9D,aAClB,EAAKoI,aAHgB,SAIErI,EAAYC,EAAcC,GAJ5B,OAMG,IANH,OAMRO,QACP,EAAKmF,MAAM1F,WAAaA,EAC1B,EAAKoH,eACiB,MAAbpH,GACT,EAAKoH,aAAa,GAEpB7H,EAAA,EAAQ8I,QAAQ,6BAEhB9I,EAAA,EAAQ8I,QAAQ,4BAdG,wBAiBrB9I,EAAA,EAAQC,MAAM,4BAjBO,4CAAzB,oCAAA4E,KAAA,iB,EA+BFnE,eAAiB,WACf,EAAK0D,KAAKC,eAAV,uCAAyB,WAAOpE,EAAOqE,GAAd,iBAAAjE,EAAA,yDAClBJ,EADkB,uBAEbO,EAAiB8D,EAAjB9D,aACR,EAAKoI,aAHgB,SAIElI,EACrBF,EACA,EAAK+G,eAAe/F,KAND,QAIf3B,EAJe,SAQe,IAApBA,EAASmB,QACvB,EAAK6G,eACL7H,EAAA,EAAQ8I,QAAQ,6BAEhB9I,EAAA,EAAQC,MAAM,4BAZK,uBAerBD,EAAA,EAAQC,MAAM,4BAfO,4CAAzB,oCAAA4E,KAAA,iB,mFAnJAA,KAAKgD,iB,kDAILhD,KAAKiD,gB,+BA0KG,IAAD,SAOHjD,KAAKsB,MALPmB,EAFK,EAELA,QACAX,EAHK,EAGLA,UACAlG,EAJK,EAILA,SACAgH,EALK,EAKLA,WACAD,EANK,EAMLA,aAGIY,EAAWvD,KAAK0C,eAAiB1C,KAAK0C,eAAiB,GACvDS,EACS,MAAbvH,EACE,uCAEA,8BACE,kBAAC8F,GAAD,CAAY8B,QAASxD,KAAK8D,eAA1B,wCACA,uBAAMjF,KAAK,cAAckC,MAAO,CAAEmD,YAAa,SAC/C,8BAAOtB,IAGPuB,EACJ,uBAAQtF,KAAK,UAAU2E,QAAS,kBAAM,EAAKK,iBACzC,uBAAMhF,KAAK,SADb,gBAMF,OACE,yBAAKsB,UAAU,YACb,wBACEgD,MAAM,2BACNiB,WAAY,eACZC,OAAQ,eACRC,QAAqC,IAA5BtE,KAAKsB,MAAMuB,aACpB0B,KAAMvE,KAAKtE,YACX8I,SAAU,kBAAM,EAAKT,eAErB,kBAAC,GAAD,CACEnI,SAAUA,EACVkG,UAAWA,EACXD,QAAS,SAAAtC,GACP,EAAKA,KAAOA,MAIlB,wBACE4D,MAAM,2BACNiB,WAAY,eACZC,OAAQ,eACRC,QAAqC,IAA5BtE,KAAKsB,MAAMuB,aACpB0B,KAAMvE,KAAKnE,eACX2I,SAAU,kBAAM,EAAKT,eAErB,kBAAC,GAAD,CACElC,QAAS,SAAAtC,GACP,EAAKA,KAAOA,GAEd5D,aAAc4H,EAAS1G,QAG3B,wBAAMsG,MAAOA,EAAOhD,UAAU,gBAAgBgE,MAAOA,GACnD,wBACEM,UAAQ,EACRC,WAAY,CAAEC,gBAAiB,EAAGC,iBAAiB,GACnDnC,QAASA,EACTS,QAASlD,KAAKkD,QACd2B,WAAyB,MAAbjJ,EAAmBkG,EAAYa,EAC3CmC,OAAO,c,GA9PI3D,a,qBCkER4D,G,2MAlEbzD,MAAQ,CACN0D,MAAO,CAAC,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,KACpCC,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,M,EAMzCC,UAAY,SAACF,EAAOC,GAClB,MAAO,CACL9B,MAAO,CACLgC,KAAM,oCAERC,QAAS,GACTC,OAAQ,CACNlL,KAAM,CAAC,eAAM,iBAEfmL,MAAO,CACLzG,KAAM,WACN1E,KAAM,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,iBAE7CoL,MAAO,CACL1G,KAAM,SAER2G,OAAQ,CAAC,CACP3I,KAAM,eACN1C,KAAM6K,EACNnG,KAAM,OACL,CACDhC,KAAM,eACN1C,KAAM8K,EACNpG,KAAM,U,EAQZ4G,OAAS,WACP,EAAK1C,UAAS,gBAAGiC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,OAAV,MACZ,CACED,MAAOA,EAAMhD,KAAI,SAAAC,GAAI,OAAIA,EAAO,KAChCgD,OAAQA,EAAOjD,KAAI,SAAAC,GAAI,OAAIA,EAAO,W,wEAM7B,IAAD,EACkBjC,KAAKsB,MAAvB2D,EADA,EACAA,OAAQD,EADR,EACQA,MAEhB,OACE,6BACE,4BACE,uBAAQnG,KAAK,UAAU2E,QAASxD,KAAKyF,QAArC,iBAGF,wBAAMtC,MAAM,4BACV,kBAAC,KAAD,CAAcuC,OAAQ1F,KAAKkF,UAAUF,EAAOC,W,GA5DpC9D,aC2DHwE,G,2MA1DbrE,MAAQ,CACN0D,MAAO,CAAC,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,KACpCC,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,M,EAGzCC,UAAY,SAACF,EAAOC,GAClB,MAAO,CACL9B,MAAO,CACLgC,KAAM,oCAERC,QAAS,GACTC,OAAQ,CACNlL,KAAM,CAAC,eAAM,iBAEfmL,MAAO,CACLzG,KAAM,WACN1E,KAAM,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,iBAE7CoL,MAAO,CACL1G,KAAM,SAER2G,OAAQ,CAAC,CACP3I,KAAM,eACN1C,KAAM6K,EACNnG,KAAM,QACL,CACDhC,KAAM,eACN1C,KAAM8K,EACNpG,KAAM,W,EAKZ4G,OAAS,WACP,EAAK1C,UAAS,gBAAGiC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,OAAV,MACZ,CACED,MAAOA,EAAMhD,KAAI,SAAAC,GAAI,OAAIA,EAAO,KAChCgD,OAAQA,EAAOjD,KAAI,SAAAC,GAAI,OAAIA,EAAO,W,wEAK7B,IAAD,EACkBjC,KAAKsB,MAAvB2D,EADA,EACAA,OAAQD,EADR,EACQA,MAChB,OACE,6BACE,4BACE,uBAAQnG,KAAK,UAAU2E,QAASxD,KAAKyF,QAArC,iBAGF,wBAAMtC,MAAM,sBACV,kBAAC,KAAD,CAAcuC,OAAQ1F,KAAKkF,UAAUF,EAAOC,W,GApDnC9D,aCyIJyE,G,2MAxIbtE,MAAQ,CACN0D,MAAO,CAAC,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,KACpCC,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,M,EAGzCC,UAAY,WACV,MAAO,CACL/B,MAAO,CACLgC,KAAM,yDACNU,QAAS,2BACTC,EAAG,UAELV,QAAS,CACPW,QAAS,OACTC,UAAW,6BAEbX,OAAQ,CACNY,OAAQ,WACRC,KAAM,OACN/L,KAAM,CAAC,2BAAQ,2BAAQ,2BAAQ,2BAAQ,6BAEzCqL,OAAQ,CACN,CACE3I,KAAM,2BACNgC,KAAM,MACNsH,OAAQ,MACRC,OAAQ,CAAC,MAAO,OAChBjM,KAAM,CACJ,CAAEsF,MAAO,IAAK5C,KAAM,4BACpB,CAAE4C,MAAO,IAAK5C,KAAM,4BACpB,CAAE4C,MAAO,IAAK5C,KAAM,4BACpB,CAAE4C,MAAO,IAAK5C,KAAM,4BACpB,CAAE4C,MAAO,KAAM5C,KAAM,6BAEvBwJ,UAAW,CACTC,SAAU,CACRC,WAAY,GACZC,cAAe,EACfC,YAAa,2B,EASzBC,WAAa,WACX,MAAO,CACLC,gBAAiB,UACjBxD,MAAO,CACLgC,KAAM,iBACNe,KAAM,SACNU,IAAK,GACLC,UAAW,CACT7F,MAAO,SAIXoE,QAAS,CACPW,QAAS,OACTC,UAAW,6BAGbc,UAAW,CACTC,MAAM,EACNnG,IAAK,GACLC,IAAK,IACLmG,QAAS,CACPC,eAAgB,CAAC,EAAG,KAGxBzB,OAAQ,CACN,CACE3I,KAAM,2BACNgC,KAAM,MACNsH,OAAQ,MACRC,OAAQ,CAAC,MAAO,OAChBjM,KAAM,CACJ,CAAEsF,MAAO,IAAK5C,KAAM,4BACpB,CAAE4C,MAAO,IAAK5C,KAAM,4BACpB,CAAE4C,MAAO,IAAK5C,KAAM,4BACpB,CAAE4C,MAAO,IAAK5C,KAAM,4BACpB,CAAE4C,MAAO,IAAK5C,KAAM,6BACpBqK,MAAK,SAAU1L,EAAG2L,GAAK,OAAO3L,EAAEiE,MAAQ0H,EAAE1H,SAC5C2H,SAAU,SACVC,MAAO,CACLC,OAAQ,CACNT,UAAW,CACT7F,MAAO,8BAIbuG,UAAW,CACTD,OAAQ,CACNE,UAAW,CACTxG,MAAO,4BAETyG,OAAQ,GACR3H,OAAQ,GACR4H,QAAS,KAGbrB,UAAW,CACTiB,OAAQ,CACNtG,MAAO,UACPuF,WAAY,IACZE,YAAa,uBAIjBkB,cAAe,QACfC,gBAAiB,aACjBC,eAAgB,SAAUC,GACxB,OAAuB,IAAhBC,KAAKC,c,wEAOX,IAAD,EACkBhI,KAAKsB,MAAvB2D,EADA,EACAA,OAAQD,EADR,EACQA,MAChB,OACE,6BACE,wBAAM7B,MAAM,sBACV,kBAAC,KAAD,CAAcuC,OAAQ1F,KAAKkF,UAAUF,EAAOC,MAE9C,wBAAM9B,MAAM,sBACV,kBAAC,KAAD,CAAcuC,OAAQ1F,KAAK0G,WAAW1B,EAAOC,W,GAlIrC9D,aCEH8G,G,2MANb3G,MAAQ,G,wEAEN,OAAO,0C,GAHSH,a,4DCFP+G,GAAY,EACZC,GAAe,gCCK5B,SAASC,GAAUC,GACjB,OAAO,IAAIhO,SAAQ,SAACC,EAASC,GAC3B,IAAM+N,EAAS,IAAIC,WACnBD,EAAOE,cAAcH,GACrBC,EAAOG,OAAS,kBAAMnO,EAAQgO,EAAO5E,SACrC4E,EAAOI,QAAU,SAAAtN,GAAK,OAAIb,EAAOa,O,IAIhBuN,G,YAUnB,WAAYrJ,GAAQ,IAAD,uBACjB,4CAAMA,KAsBRsJ,aAAe,kBAAM,EAAK7F,SAAS,CAAE8F,gBAAgB,KAvBlC,EA0BnBC,cA1BmB,uCA0BH,WAAMT,GAAN,SAAA7M,EAAA,yDACT6M,EAAKnO,KAAQmO,EAAKU,QADT,gCAESX,GAAUC,EAAKW,eAFxB,OAEZX,EAAKU,QAFO,cAKd,EAAKhG,SAAS,CACZkG,aAAcZ,EAAKnO,KAAOmO,EAAKU,QAC/BF,gBAAgB,IAPJ,2CA1BG,wDA0CnBK,aA1CmB,uCA0CJ,+BAAA1N,EAAA,yDAAS6M,EAAT,EAASA,KAAMc,EAAf,EAAeA,SAAf,EAAyBC,MACtC,EAAKrG,SAAS,CAAEoG,aACI,SAAhBd,EAAKlM,OAFI,iBAGXkM,EAAOc,EAASA,EAASrJ,OAAS,IAC7BjD,KAAOsM,EAASA,EAASrJ,OAAS,GAAG9E,SAASb,KAAK0C,KACxD1B,EAAA,EAAQ8I,QAAQ,4BALL,0BAMc,YAAhBoE,EAAKlM,OANH,kCAOYS,EAAUyL,EAAKxL,MAP3B,QAQa,IARb,OAQEV,OACXhB,EAAA,EAAQ8I,QAAQ,4BAEhB9I,EAAA,EAAQC,MAAM,4BAXL,4CA1CI,wDA6DnBiO,YAAc,WACZ,OAAO,EAAK/H,MAAM6H,SAASnH,KAAI,SAAAqG,GAAI,OAAIA,EAAKxL,SA9D3B,IAETM,EAAS,EAAKmC,MAAdnC,KACFgM,EAAW,GAHA,OAIbhM,GAAQA,EAAK2C,OAAS,GACxB3C,EAAKmM,SAAQ,SAACzM,EAAMqF,GAClBiH,EAASI,KAAK,CACZC,KAAMtH,EACNrF,OACAV,OAAQ,OACRjC,IAAI,GAAD,OAAKiO,IAAL,OAAoBtL,QAK7B,EAAKyE,MAAQ,CACXuH,gBAAgB,EAChBI,aAAc,GACdE,YAlBe,E,sEAiET,IAAD,EAC4CnJ,KAAKsB,MAAhDuH,EADD,EACCA,eAAgBI,EADjB,EACiBA,aAAcE,EAD/B,EAC+BA,SAChCM,EACJ,6BACE,uBAAM5K,KAAK,SACX,wCAGJ,OACE,6BACE,wBACE6K,OAAO,qBACPC,SAAS,eACT9M,KAAK,QACLsM,SAAUA,EACVS,OAAO,UACPC,UAAW7J,KAAK8I,cAChBgB,SAAU9J,KAAKkJ,cAEdC,EAASrJ,QAAU,EAAI,KAAO2J,GAEjC,wBACEnF,QAASuE,EACTkB,OAAQ,KACRvF,SAAUxE,KAAK4I,cAEf,yBAAKtI,IAAI,UAAUS,MAAO,CAAEsC,MAAO,QAAUjD,IAAK6I,U,GArGlBe,IAAM7I,W,8DCL3B8I,I,oBAKnB,WAAY3K,GAAQ,IAAD,uBACjB,4CAAMA,KAoBR4K,oBAAsB,SAAAC,GACpB,EAAKpH,SAAS,CACZoH,iBAvBe,EA4BnBC,UAAY,WAAO,IACTD,EAAgB,EAAK7I,MAArB6I,YAER,OAAOE,KAAYC,wBAAaH,EAAYI,uBA/B3B,EAmCnBC,oBAAsB,SAAAnC,GACpB,OAAO,IAAIhO,SAAQ,SAACC,EAASC,GAC3B,IAAMkQ,EAAM,IAAIC,eAChBD,EAAIE,KAAK,OAAQ,sBAEjB,IAAMxQ,EAAO,IAAIyQ,SACjBzQ,EAAK0Q,OAAO,QAASxC,GACrBoC,EAAIK,KAAK3Q,GACTsQ,EAAIM,iBAAiB,QAAQ,WAC3B,IAAM/P,EAAWgQ,KAAKC,MAAMR,EAAIS,cAChCC,QAAQC,IAAI,aAAcpQ,GACF,IAApBA,EAASmB,QACXhB,EAAA,EAAQ8I,QAAQ,4BAChB3J,EAAQ,CAAEH,KAAM,CAAEkR,KAAMrQ,EAASb,KAAKD,SAEtCiB,EAAA,EAAQC,MAAM,4BACdb,EAAOS,EAASb,KAAKqH,SAGzBiJ,EAAIM,iBAAiB,SAAS,WAC5B,IAAM3P,EAAQ4P,KAAKC,MAAMR,EAAIS,cAC7B3Q,EAAOa,UAxDM,IAET8B,EAAW,EAAKoC,MAAhBpC,OACR,GAAIA,EAAQ,CACV,IAAMoO,EAAeC,KAAYrO,GACjC,GAAIoO,EAAc,CAChB,IAAME,EAAeC,gBAAaC,qBAChCJ,EAAaK,eAETxB,EAAcyB,eAAYC,kBAAkBL,GAClD,EAAKlK,MAAQ,CACX6I,qBAIJ,EAAK7I,MAAQ,CACX6I,YAAayB,eAAYE,eAhBZ,S,sEAoET,IACA3B,EAAgBnK,KAAKsB,MAArB6I,YACR,OACE,kBAAC,UAAD,CACEA,YAAaA,EACb4B,iBAAiB,eACjBC,gBAAgB,cAChB9B,oBAAqBlK,KAAKkK,oBAC1B+B,YAAa,CACXC,UAAW,IACXC,OAAQ,kBACRC,YAAa,IAEfC,QAAS,CACPC,MAAO,CACLC,eAAgBvM,KAAKwK,oBACrBlK,IAAK,CAAEkM,SAAS,EAAMC,WAAW,W,GAzFDtL,cCHpClC,G,IAAAA,KACAyN,G,IAAAA,SAGFC,G,YAKJ,WAAYrN,GAAQ,IAAD,8BACjB,4CAAMA,KALRgC,MAAQ,CACNsL,QAAS,IAGQ,EAYnBC,YAZmB,uCAYL,WAAMD,GAAN,mBAAApR,EAAA,2EAECuB,EAFD,EAEV+P,QAAW/P,aAFD,EAGVgQ,UAG8B,MAAhBhQ,EANJ,gCASiB,EAAKhB,YAAYgB,GATlC,OASJiQ,EATI,OAYWJ,EAAQK,MAAK,SAAAvH,GAAM,OAAIA,EAAOjG,QAAU1C,KAChDmQ,SAAWF,EAbd,OAgBZ,EAAKjK,SAAS,CACZ6J,YAjBU,2CAZK,wDAoCnB7Q,YApCmB,sBAoCL,4CAAAP,EAAA,6DAAOI,EAAP,+BAAkB,EAAlB,SAEWG,EAAYH,GAFvB,YAENZ,EAFM,SAGwB,IAApBA,EAASmB,OAHb,oBAIJyQ,EAAU5R,EAASb,KAAK6H,KAAI,gBAAGnF,EAAH,EAAGA,KAAH,MAAoB,CACpD4C,MADgC,EAAS9C,IAEzC0K,MAAOxK,EACPsQ,OAAqB,IAAbvR,MAEO,IAAbA,EATM,iBAWR,EAAKiR,YAAYD,GAXT,iDAcDA,GAdC,gCAiBVzR,EAAA,EAAQC,MAAM,oDAjBJ,4CApCK,EA0DnBgS,SA1DmB,uCA0DR,WAAMC,GAAN,iBAAA7R,EAAA,6DACH8R,EAAeD,EAAgB,IACxB5K,SAAU,EAFd,SAIY,EAAK1G,YAAYuR,EAAa7N,OAJ1C,OAIHiG,EAJG,OAKT4H,EAAa7K,SAAU,EACnBiD,GAAUA,EAAO5F,OAAS,EAC5BwN,EAAaJ,SAAWxH,EAExB4H,EAAaH,QAAS,EAGxB,EAAKpK,SAAS,CACZ6J,QAAQ,aAAK,EAAKtL,MAAMsL,WAbjB,2CA1DQ,wDA4EnBW,OAAS,WACP,EAAKjO,MAAMC,KAAKC,eAAhB,uCAA+B,WAAOpE,EAAOqE,GAAd,mCAAAjE,EAAA,yDACxBJ,EADwB,wBAGrBoS,EAAK,EAAKA,GAAGC,QAEbC,EAAS,EAAKA,OAAOD,QACnB3L,EAAiCrC,EAAjCqC,UAAWjF,EAAsB4C,EAAtB5C,KAAMG,EAAgByC,EAAhBzC,KAAMC,EAAUwC,EAAVxC,MAEN,IAArB6E,EAAUhC,QACZhE,EAAagG,EAAU,GACvB/E,EAAc+E,EAAU,IAExB/E,EAAc+E,EAAU,GAEpB3E,EAAOqQ,EAAGnE,cACVnM,EAASwQ,EAAOtD,YAElB0C,EAAU,CACZhR,aACAiB,cACAF,OACAG,OACAC,QACAE,OACAD,UAGE,EAAK6P,WACPD,EAAQnQ,IAAM,EAAKmQ,QAAQnQ,KA5BF,UA8BJG,EAAmBgQ,GA9Bf,QA+BH,IA/BG,OA+Bd3Q,QACXhB,EAAA,EAAQ8I,QAAR,UAAmB,EAAK8I,SAAW,eAAO,eAA1C,6BACA,EAAKzN,MAAMqO,QAAQC,UAEnBzS,EAAA,EAAQ8I,QAAR,UAAmB,EAAK8I,SAAW,eAAO,eAA1C,6BAnCyB,wBAsC3B5R,EAAA,EAAQC,MAAM,4BAtCa,4CAA/B,oCAAA4E,KAAA,iBA7EiB,EA4HnB6N,cAAgB,SAACjO,EAAMH,EAAOI,GACxBiO,OAAOC,SAAStO,GAAS,EAC3BI,IAEAA,EAAS,sDA9HX,EAAK2N,GAAKxD,IAAMgE,YAChB,EAAKN,OAAS1D,IAAMgE,YAHH,E,iFAwIjBhO,KAAKjE,gB,kDAQL,IAAM+Q,EAAU9M,KAAKV,MAAM2O,SAAS3M,MACpCtB,KAAK+M,WAAaD,EAClB9M,KAAK8M,QAAUA,GAAW,K,+BAGlB,IAAD,OAKP3B,QAAQC,IAAI,qBALL,IAMClL,EAAsBF,KAAKV,MAAMC,KAAjCW,kBACA4M,EAAsB9M,KAAtB8M,QAASC,EAAa/M,KAAb+M,SAEfhQ,EAOE+P,EAPF/P,YACAjB,EAMEgR,EANFhR,WACAe,EAKEiQ,EALFjQ,KACAG,EAIE8P,EAJF9P,KACAC,EAGE6P,EAHF7P,MACAE,EAEE2P,EAFF3P,KACAD,EACE4P,EADF5P,OAEIgR,EAAc,GAChBnB,IACkB,MAAhBhQ,GACFmR,EAAY3E,KAAKxM,GACjBmR,EAAY3E,KAAKzN,IAEjBoS,EAAY3E,KAAKzN,IAGrB,IAAMqH,EACJ,8BACE,kBAACzB,GAAD,CACE8B,QAAS,WACP,EAAKlE,MAAMqO,QAAQC,WAGrB,uBAAM/O,KAAK,aAAakC,MAAO,CAAEoN,SAAU,OAE7C,0BAAMpN,MAAO,CAAEoN,SAAU,KAAzB,6BAYJ,OACE,wBAAMhL,MAAOA,GACX,sBAPmB,CACrBiL,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,IAMhB,kBAAC,GAAD,CAAMhH,MAAM,6BACTnH,EAAkB,OAAQ,CACzB6B,aAAclF,EACd4D,MAAO,CAAC,CAAEC,UAAU,EAAMvF,QAAS,sDAFpC+E,CAGE,uBAAOe,YAAY,iDAExB,kBAAC,GAAD,CAAMoG,MAAM,6BACTnH,EAAkB,OAAQ,CACzB6B,aAAc/E,EACdyD,MAAO,CAAC,CAAEC,UAAU,EAAMvF,QAAS,sDAFpC+E,CAIC,kBAACwM,GAAD,CACEzL,YAAY,6CACZsN,SAAU,CAAEC,QAAS,EAAGC,QAAS,OAIvC,kBAAC,GAAD,CAAMpH,MAAM,6BACTnH,EAAkB,QAAS,CAC1B6B,aAAc9E,EACdwD,MAAO,CACL,CAAEC,UAAU,EAAMvF,QAAS,oDAC3B,CAAEwE,UAAWK,KAAK6N,iBAJrB3N,CAOC,uBACEe,YAAY,6CACZpC,KAAK,SACL6P,WAAW,aAIjB,kBAAC,GAAD,CAAMrH,MAAM,4BACTnH,EAAkB,YAAa,CAC9B6B,aAAcmM,EACdzN,MAAO,CAAC,CAAEC,UAAU,EAAMvF,QAAS,sDAFpC+E,CAIC,wBACEe,YAAY,6CACZ2L,QAAS5M,KAAKsB,MAAMsL,QACpBQ,SAAUpN,KAAKoN,aAIrB,kBAAC,GAAD,CAAM/F,MAAM,4BACV,kBAAC,GAAD,CAAclK,KAAMA,EAAMwR,IAAK3O,KAAKwN,MAGtC,kBAAC,GAAD,CACEnG,MAAM,2BACN+G,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAEpB,kBAAC,GAAD,CAAgBnR,OAAQA,EAAQyR,IAAK3O,KAAK0N,UAE5C,uBAAQ7O,KAAK,UAAU2E,QAASxD,KAAKuN,QAArC,sB,GAnQqBpM,aA8QhByN,GAFc,IAAKnU,QAAL,CAAckS,I,oBCjRrC1N,GAAO,KAAKA,KAgGH4P,G,2MA5FbvN,MAAQ,CACN3F,aAAc,GACdmT,gBAAiB,I,oNASZ9O,KAAKV,MAAM2O,SAAS3M,M,yCAChB,kBAAC,IAAD,CAAUrB,GAAG,c,YAEcD,KAAKV,MAAM2O,SAAS3M,MAAhDxF,E,EAAAA,WACY,OADAiB,E,EAAAA,a,iCAEKf,EAAgBF,G,OAAjCd,E,OACAW,EAAeX,EAASb,KAAK0C,KACnCmD,KAAK+C,SAAS,CAAEpH,iB,yCAEQtB,QAAQ0U,IAAI,CAClC/S,EAAgBF,GAChBE,EAAgBe,K,QAFZiS,E,OAKArT,EAAeqT,EAAU,GAAG7U,KAAK0C,KACjCiS,EAAkBE,EAAU,GAAG7U,KAAK0C,KAE1CmD,KAAK+C,SAAS,CACZpH,eACAmT,oB,sIAKI,IAAD,OACP,IAAK9O,KAAKV,MAAM2O,SAAS3M,MACvB,OAAO,kBAAC,IAAD,CAAUrB,GAAG,aAFf,MAIqCD,KAAKV,MAAM2O,SAAS3M,MAAxDzE,EAJD,EAICA,KAAMG,EAJP,EAIOA,KAAME,EAJb,EAIaA,OAAQC,EAJrB,EAIqBA,KAAMF,EAJ3B,EAI2BA,MAJ3B,EAMmC+C,KAAKsB,MAAvC3F,EAND,EAMCA,aAAcmT,EANf,EAMeA,gBAEhB3L,EACJ,8BACE,uBAAQtE,KAAK,UAAU2E,QAAS,kBAAM,EAAKlE,MAAMqO,QAAQC,WACvD,uBAAM/O,KAAK,eADb,iBAMJ,OACE,wBAAMsE,MAAOA,EAAOhD,UAAU,kBAC5B,4BACE,kBAAC,GAAD,KACE,0BAAMA,UAAU,SAAhB,6BACA,8BAAOtD,IAET,kBAAC,GAAD,KACE,0BAAMsD,UAAU,SAAhB,6BACA,8BAAOnD,IAET,kBAAC,GAAD,KACE,0BAAMmD,UAAU,SAAhB,6BACA,8BAAOlD,IAET,kBAAC,GAAD,KACE,0BAAMkD,UAAU,SAAhB,6BACA,8BACGxE,EADH,IACkBmT,EAAkB,SAAQA,EAAkB,KAGhE,kBAAC,GAAD,KACE,0BAAM3O,UAAU,SAAhB,6BACChD,EAAK6E,KAAI,SAACC,EAAMC,GAAP,OACR,yBAAKC,IAAKD,EAAO9B,IAAG,UAAK+H,IAAL,OAAoBlG,GAAQ3B,IAAI,UAGxD,kBAAC,GAAD,KACE,0BAAMH,UAAU,SAAhB,6BACA,yBACE8O,wBAAyB,CACvBC,OAAQhS,Y,GAnFIiE,aCGtBQ,GAAS,KAAOA,OA8NPwN,G,2MA5Nb7N,MAAQ,CACNmB,SAAS,EACT2M,MAAO,EACPC,SAAU,GACV5S,WAAY,cACZ6S,YAAa,I,EAIfrT,oB,uCAAsB,WAAM6Q,GAAN,eAAAtR,EAAA,sEACGS,EACrB6Q,EAAQnQ,IACW,IAAnBmQ,EAAQ3Q,OAAe,EAAI,GAHT,QACdnB,EADc,SAKgB,IAApBA,EAASmB,QACvBhB,EAAA,EAAQ8I,QAAQ,4BAChB,EAAKsL,YAAY,EAAKlT,UAEtBlB,EAAA,EAAQC,MAAM,4BATI,2C,wDActB6H,YAAc,WACZ,EAAKC,QAAU,CACb,CACEC,MAAO,2BACPC,UAAW,QAEb,CACED,MAAO,2BACPC,UAAW,QAEb,CACED,MAAO,eACPC,UAAW,QACXE,OAAQ,SAAArG,GAAK,oBAAQA,KAEvB,CACEkG,MAAO,eACPE,MAAO,IAEPC,OAAQ,SAAAwJ,GACN,OACE,8BACE,uBACEjO,KAAK,UACL2E,QAAS,WACP,EAAKvH,oBAAoB6Q,KAGP,IAAnBA,EAAQ3Q,OAAe,eAAO,gBAEjC,8BAA0B,IAAnB2Q,EAAQ3Q,OAAe,eAAO,yBAK7C,CACEkH,MAAO,IACPF,MAAO,eACPG,OAAQ,SAAAwJ,GACN,OACE,6BACE,kBAACpL,GAAD,CACE8B,QAAS,kBACP,EAAKlE,MAAMqO,QAAQpE,KAAK,kBAAmBuD,KAF/C,gBAOA,kBAACpL,GAAD,CACE8B,QAAS,kBAKP,EAAKlE,MAAMqO,QAAQpE,KAAK,kBAAmBuD,KAN/C,gBAYA,kBAACpL,GAAD,CAAY8B,QAAS,kBAAM,EAAK9G,WAAWoQ,EAAQnQ,OAAnD,qB,EAWZD,W,uCAAa,WAAMC,GAAN,SAAAnB,EAAA,sEACYkB,EAAWC,GADvB,OAEa,IAFb,OAEER,QACXhB,EAAA,EAAQ8I,QAAQ,4BAChB,EAAKsL,YAAY,IAEjBpU,EAAA,EAAQC,MAAM,4BANL,2C,wDAWbmU,Y,uCAAc,WAAM9B,GAAN,2BAAAjS,EAAA,yDACZ,EAAKuH,SAAS,CACZN,SAAS,IAGX,EAAKpG,QAAUoR,EALH,EAMwB,EAAKnM,MAAjC7E,EANI,EAMJA,cAAY6S,EANR,EAMQA,aAGJxP,OAAS,GATb,gCAUOvD,EACf,EAAKF,QACL6L,GACAoH,EACA7S,GAdQ,OAUVzB,EAVU,+CAiBOoB,EAAe,EAAKC,QAAS6L,IAjBpC,QAiBVlN,EAjBU,eAoBRA,GAAgC,IAApBA,EAASmB,QAAe,EACdnB,EAASb,KAAzBqV,EAD6B,EAC7BA,KAAMJ,EADuB,EACvBA,MACd,EAAKrM,SAAS,CACZN,SAAS,EACT4M,SAAUG,EACVJ,WAGFjU,EAAA,EAAQC,MAAM,oDA5BJ,4C,yIAqCZ4E,KAAKuP,YAAY,K,kDAKjBvP,KAAKiD,gB,+BAOG,IAAD,SAC0CjD,KAAKsB,MAA9C8N,EADD,EACCA,MAAOC,EADR,EACQA,SAAU5M,EADlB,EACkBA,QAAShG,EAD3B,EAC2BA,WAC5B0G,EACJ,6BACE,wBACEsM,aAAchT,EACdsE,MAAO,CAAEsC,MAAO,KAChByG,SAAU,SAAArK,GACR,EAAKsD,SAAS,CACZtG,WAAYgD,MAIhB,kBAAC,GAAD,CAAQA,MAAM,eAAd,wCACA,kBAAC,GAAD,CAAQA,MAAM,eAAd,yCAEF,uBACEsB,MAAO,CAAEsC,MAAO,IAAKqM,OAAQ,IAC7BzO,YAAY,2BACZ6I,SAAU,gBAAarK,EAAb,EAAGkQ,OAAUlQ,MAAb,OACR,EAAKsD,SAAS,CACZuM,YAAa7P,EAAMmQ,YAIzB,uBACE/Q,KAAK,UACL2E,QAAS,WACP,EAAK+L,YAAY,KAHrB,iBAUEpL,EACJ,uBACEtF,KAAK,UACL2E,QAAS,kBAAM,EAAKlE,MAAMqO,QAAQpE,KAAK,kBAEvC,uBAAM1K,KAAK,SAJb,gBASF,OACE,wBAAMsE,MAAOA,EAAOgB,MAAOA,GACzB,wBACE1B,QAASA,EACTgC,UAAU,EACVK,OAAO,MACPD,WAAYwK,EACZnM,QAASlD,KAAKkD,QACdwB,WAAY,CACV+I,QAASzN,KAAK3D,QACdsI,gBAAiBuD,GACjBkH,QACAtF,SAAU9J,KAAKuP,YACf3K,iBAAiB,U,GArNHzD,aCcX0O,I,mNAnBbvO,MAAQ,G,wEAON,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOwO,KAAK,WAAWC,UAAWZ,GAAaa,OAAO,IACtD,kBAAC,IAAD,CAAOF,KAAK,eAAeC,UAAWpD,KACtC,kBAAC,IAAD,CAAOmD,KAAK,kBAAkBC,UAAWpD,KACzC,kBAAC,IAAD,CAAOmD,KAAK,kBAAkBC,UAAWlB,KACzC,kBAAC,IAAD,CAAU5O,GAAG,kB,GAdCkB,cCPf,SAAS8O,GAAYC,GAC1B,IAAKA,EAAM,MAAO,GAClB,IAAIC,EAAO,IAAIC,KAAKF,GACpB,OACEC,EAAKE,cACL,KACCF,EAAKG,WAAa,GACnB,IACAH,EAAKI,UACL,IACAJ,EAAKK,WACL,IACAL,EAAKM,aACL,IACAN,EAAKO,a,ICVDzR,G,IAAAA,KAQF2C,G,2MAIJN,MAAQ,G,2FAGNtB,KAAKV,MAAMuC,QAAQ7B,KAAKV,MAAMC,Q,+BAI9B4L,QAAQC,IAAI,qBADL,IAGGlL,EACNF,KAAKV,MADPC,KAAQW,kBAEV,OACE,uBAAMkO,SAAU,CAAEC,KAAM,GAAKC,WAAY,CAAED,KAAM,KAC/C,kBAAC,GAAD,CAAMhH,MAAM,6BACTnH,EAAkB,OAAQ,CACzBO,MAAO,CAAC,CAAEC,UAAU,EAAMvF,QAAS,sDADpC+E,CAEE,uBAAOe,YAAY,sD,GApBVE,aA6BPkB,GAFK,IAAK5H,QAAL,CAAcmH,I,oBC4BnB+O,GAnEE,CACf,CACExN,MAAO,eACPhB,IAAK,QACLyO,KAAM,OACNC,UAAU,GAEZ,CACE1N,MAAO,eACPhB,IAAK,YACLyO,KAAM,WACN1D,SAAU,CAER,CACE/J,MAAO,2BACPhB,IAAK,YACLyO,KAAM,QAER,CACEzN,MAAO,2BACPhB,IAAK,WACLyO,KAAM,UAKZ,CACEzN,MAAO,2BACPhB,IAAK,QACLyO,KAAM,QAER,CACEzN,MAAO,2BACPhB,IAAK,QACLyO,KAAM,UAGR,CACEzN,MAAO,2BACPhB,IAAK,UACLyO,KAAM,aACN1D,SAAU,CACR,CACE/J,MAAO,qBACPhB,IAAK,cACLyO,KAAM,aAER,CACEzN,MAAO,qBACPhB,IAAK,eACLyO,KAAM,cAER,CACEzN,MAAO,eACPhB,IAAK,cACLyO,KAAM,eAKZ,CACEzN,MAAO,2BACPhB,IAAK,SACLyO,KAAM,YC1DFE,G,KAAAA,SACA7R,G,IAAAA,KA+FO8R,G,YA3Eb,WAAYzR,GAAQ,IAAD,uBACjB,4CAAMA,KAQR0R,SAAW,kBAAM,EAAK1P,MAAM2P,aATT,EAWnBC,QAAU,SAACD,EAAaE,GACtB,EAAKpO,SAAS,CAAEkO,iBAZC,EAenBG,aAAe,SAAAT,GACb,OAAOA,EAASU,QAAO,SAACC,EAAKrP,GAM3B,OALAqP,EAAI/H,KACF,kBAACuH,GAAD,CAAU3N,MAAOlB,EAAKkB,MAAOhB,IAAKF,EAAKE,KACpCF,EAAKiL,SAAW,EAAKkE,aAAanP,EAAKiL,UAAY,OAGjDoE,IACN,KAvBc,IAET9T,EAAU,EAAK8B,MAAMiS,KAArB/T,MAFS,OAGjB,EAAK8D,MAAQ,CACX2P,YAAazT,GAJE,E,yFA2BjBwC,KAAKwR,UAAYxR,KAAKoR,aAAaT,M,uDASJc,GAAY,IACnCjU,EAAUiU,EAAUF,KAApB/T,MACRwC,KAAK+C,SAAS,CAAEkO,YAAazT,M,+BAU7B2N,QAAQC,IAAI,sBADL,IAECmG,EAASvR,KAAKV,MAAdiS,KAKR,OACE,6BACE,kBAAC,GAAD,eAAMlK,MAAM,4BANO,CACrB+G,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,MAKhB,uBAAO5O,MAAO8R,EAAK1U,KAAM6U,UAAQ,KAEnC,wBACEC,kBAAkB,EAClBC,WAAS,EACTX,YAAajR,KAAKsB,MAAM2P,YACxBY,SAAU7R,KAAK6R,SACfX,QAASlR,KAAKkR,SAEd,kBAACJ,GAAD,CAAU3N,MAAM,2BAAOhB,IAAI,OACxBnC,KAAKwR,iB,GA/EKM,iBCJjBC,G,YAWJ,WAAYzS,GAAQ,IAAD,8BACjB,4CAAMA,KAXRgC,MAAQ,CACN0Q,MAAO,GACPT,KAAM,GACN1O,aAAc,GAOG,EAMnBoP,MAAQ,SAAAV,GACN,MAAO,CACL/N,QAAS,SAAA4F,GACP,EAAKrG,SAAS,CACZwO,YAVW,EAiBnBnU,YAjBmB,sBAiBL,8BAAA5B,EAAA,sEACW4B,IADX,QACNpC,EADM,SAEwB,IAApBA,EAASmB,SACjB6V,EAAQhX,EAASb,KACvB,EAAK4I,SAAS,CACZiP,WALQ,2CAjBK,EAgCnBnQ,QAAU,SAAAtC,GACR,EAAKA,KAAOA,GAjCK,EAqCnBlC,QAAU,WACR,EAAKkC,KAAKC,eAAV,uCAAyB,WAAOpE,EAAOqE,GAAd,iBAAAjE,EAAA,yDAClBJ,EADkB,uBAEbyB,EAAS4C,EAAT5C,KAFa,SAGEQ,EAAQR,GAHV,QAGf7B,EAHe,SAIe,IAApBA,EAASmB,QACvBhB,EAAA,EAAQ8I,QAAQ,4BAYhB,EAAKlB,UAAS,SAAAzB,GAAK,MAAK,CAAE0Q,MAAM,GAAD,oBAAM1Q,EAAM0Q,OAAZ,CAAmBhX,EAASb,WAE3D,EAAKoF,KAAKyE,eAEV7I,EAAA,EAAQ8I,QAAQ,4BAElB,EAAKO,WAvBgB,uBAyBrBrJ,EAAA,EAAQC,MAAM,4BAzBO,4CAAzB,oCAAA4E,KAAA,iBAtCiB,EAqEnBkS,SArEmB,sBAqER,sCAAA1W,EAAA,6DACDqC,EAAS,EAAKyB,MAAdzB,KACAlB,EAAQ,EAAK2E,MAAMiQ,KAAnB5U,IACFwV,EAAW,EAAKA,SAAS1E,QACzB8D,EAAO,EAAKjQ,MAAMiQ,KAClBa,EAAQ,CACZ5U,MAAO2U,EAASnB,WAChBrU,MACAe,UAAWG,EAAKvC,SAChBmC,UAAW2S,KAAKiC,OAGlB1O,OAAO2O,OAAOf,EAAMa,GAZX,SAcc7U,EAAWgU,GAdzB,QAcHvW,EAdG,SAgB2B,IAApBA,EAASmB,OACnBoV,EAAK5U,MAAQkB,EAAK0U,SAEpBpX,EAAA,EAAQ8I,QAAQ,+FAChB,EAAK3E,MAAMP,cAEX5D,EAAA,EAAQ8I,QAAQ,oDAChB,EAAKlB,SAAS,CACZiP,MAAM,aAAK,EAAK1Q,MAAM0Q,SAGxB,EAAKxN,YAGPrJ,EAAA,EAAQC,MAAM,oDA9BP,4CArEQ,EAuGnBoJ,SAAW,WACL,EAAKjF,MACP,EAAKA,KAAKyE,cAGZ,EAAKjB,SAAS,CACZF,aAAc,KA3GhB,EAAKsP,SAAWnI,IAAMgE,YAFL,E,iFAmHjBhO,KAAK5C,gB,kDAKL4C,KAAKkD,QAAU,CACb,CACEC,MAAO,2BACPC,UAAW,QAEb,CACED,MAAO,2BACPC,UAAW,cACXE,OAAQ2M,IAEV,CACE9M,MAAO,2BACPC,UAAW,YACXE,OAAQ2M,IAEV,CACE9M,MAAO,qBACPC,UAAW,gB,+BAKP,IAAD,SACiBpD,KAAKsB,MAArBiQ,EADD,EACCA,KAAMS,EADP,EACOA,MACR7O,EACJ,6BACE,uBACEtE,KAAK,UACL2E,QAAS,WACP,EAAKT,SAAS,CAAEF,aAAc,MAHlC,4BAQA,uBACEhE,KAAK,UACL6S,UAAWH,EAAK5U,IAChBoE,MAAO,CAAEyR,WAAY,IACrBhP,QAAS,WACP,EAAKT,SAAS,CAAEF,aAAc,MALlC,yCAaJ,OACE,wBAAMM,MAAOA,GACX,wBACEA,MAAM,2BACNmB,QAAqC,IAA5BtE,KAAKsB,MAAMuB,aACpB0B,KAAMvE,KAAK3C,QACXmH,SAAUxE,KAAKwE,SACfH,OAAO,eACPD,WAAW,gBAEX,kBAAC,GAAD,CAASvC,QAAS7B,KAAK6B,WAGzB,wBACEsB,MAAM,uCACNmB,QAAqC,IAA5BtE,KAAKsB,MAAMuB,aACpB0B,KAAMvE,KAAKkS,SACX1N,SAAUxE,KAAKwE,SACfH,OAAO,eACPD,WAAW,gBAEX,kBAAC,GAAD,CAAUmN,KAAMA,EAAM5C,IAAK3O,KAAKmS,YAElC,wBACEzN,WAAY,CAAEpI,SAAU4L,IACxBrD,WAAYmN,EACZlN,OAAO,MACP5B,QAASlD,KAAKkD,QACduB,UAAU,EACVgO,aAAc,CACZ5T,KAAM,QACN6T,gBAAiB,CAACnB,EAAK5U,KACvBkV,SAAU,SAAAc,GAAM,OACd,EAAK5P,SAAS,CACZwO,KAAMoB,MAGZV,MAAOjS,KAAKiS,a,GAvNH9Q,aA8NJE,gBACb,SAAAC,GAAK,MAAK,CAAEzD,KAAMyD,EAAMzD,QACxB,CAAEkB,cAFWsC,CAGb0Q,I,oBCvOM9S,G,IAAAA,KACA0C,G,KAAAA,OAEFiR,G,2MAWJtR,MAAQ,G,2FAHNtB,KAAKV,MAAMuC,QAAQ7B,KAAKV,MAAMC,Q,+BAItB,IAAD,EACiBS,KAAKV,MAArB0S,EADD,EACCA,MAAOnU,EADR,EACQA,KACPqC,EAAsBF,KAAKV,MAAMC,KAAjCW,kBACF2S,EAAY,CAChBzE,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAGtB,OACE,2BACE,kBAAC,GAAD,eAAMhH,MAAM,uBAAWwL,GACpB3S,EAAkB,WAAY,CAC7B6B,aAAclE,EAAKvC,SACnBmF,MAAO,CACL,CAAEC,UAAU,EAAMvF,QAAS,oDAC3B,CAAEyF,IAAK,EAAGzF,QAAS,2DACnB,CAAE0F,IAAK,GAAI1F,QAAS,8DALvB+E,CAOE,uBAAOe,YAAY,iDAEvBpD,EAAKlB,IAAM,KACV,kBAAC,GAAD,eAAM0K,MAAM,iBAAUwL,GACnB3S,EAAkB,WAAY,CAC7B6B,aAAclE,EAAKtC,SACnBkF,MAAO,CACL,CAAEC,UAAU,EAAMvF,QAAS,wCAC3B,CAAEyF,IAAK,EAAGzF,QAAS,2DACnB,CAAE0F,IAAK,GAAI1F,QAAS,8DALvB+E,CAOE,uBAAOrB,KAAK,WAAWoC,YAAY,qCAG1C,kBAAC,GAAD,eAAMoG,MAAM,uBAAWwL,GACpB3S,EAAkB,QAAS,CAAE6B,aAAclE,EAAKiV,OAAhD5S,CACC,uBAAOe,YAAY,iDAGvB,kBAAC,GAAD,eAAMoG,MAAM,iBAAUwL,GACnB3S,EAAkB,QAAS,CAAE6B,aAAclE,EAAKkV,OAAhD7S,CACC,uBAAOe,YAAY,iDAGvB,kBAAC,GAAD,eAAMoG,MAAM,iBAAUwL,EAAtB,CAAiCpD,aAAcuC,EAAM,GAAGrV,MACrDuD,EAAkB,UAAW,CAAE6B,aAAclE,EAAK0U,SAAlDrS,CACC,4BACG8R,EAAMhQ,KAAI,SAAAuP,GAAI,OACb,kBAAC,GAAD,CAAQpP,IAAKoP,EAAK5U,IAAK8C,MAAO8R,EAAK5U,KAChC4U,EAAK1U,iB,GA3DDsE,aAuERkB,GADK,IAAK5H,QAAL,CAAcmY,ICnE5BI,G,2MACJ1R,MAAQ,CACNzD,KAAM,GACN4E,SAAS,EACTuP,MAAO,GACPiB,MAAO,GACP3O,SAAS,G,EAGXrB,YAAc,WACZ,EAAKC,QAAU,CACb,CACEC,MAAO,qBACPC,UAAW,YAEb,CACED,MAAO,eACPC,UAAW,SAEb,CACED,MAAO,eACPC,UAAW,SAEb,CACED,MAAO,2BACPC,UAAW,cACXE,OAAQ2M,IAEV,CACE9M,MAAO,2BACPC,UAAW,UACXE,OAAQ,SAAAiP,GAAO,OAAI,EAAKW,UAAUtY,IAAI2X,KAExC,CACEpP,MAAO,eACPG,OAAQ,SAAAzF,GACN,OACE,6BACE,kBAAC6D,GAAD,CAAY8B,QAAS,kBAAM,EAAK2P,UAAUtV,KAA1C,gBACA,wBACEsF,MAAM,0DACNiQ,UAAW,kBAAM,EAAKC,QAAQxV,EAAKlB,MACnC0H,OAAO,eACPD,WAAW,gBAEX,kBAAC1C,GAAD,2B,EASd4R,cAAgB,SAAAtB,GACd,IAAMkB,EAAYlB,EAAMX,QAAO,SAACC,EAAKC,GAEnC,OADAD,EAAI7S,IAAI8S,EAAK5U,IAAK4U,EAAK1U,MAChByU,IACN,IAAIiC,KACP,EAAKL,UAAYA,G,EAGnBvV,Y,sBAAc,kCAAAnC,EAAA,sEACWmC,IADX,OACN3C,EADM,OAEZmQ,QAAQC,IAAI,gBAAiBpQ,GACzBA,GAAgC,IAApBA,EAASmB,QAAe,EACbnB,EAASb,KAA1B8Y,EAD6B,EAC7BA,MAAOjB,EADsB,EACtBA,MACf,EAAKsB,cAActB,GACnB,EAAKjP,SAAS,CAAEkQ,QAAOjB,QAAOvP,SAAS,KAEvCtH,EAAA,EAAQC,MAAM,oDARJ,2C,EAYd+X,UAAY,SAAAtV,GACV,EAAKkF,SAAS,CACZlF,OACAyG,SAAS,K,EAIbkP,QAAU,WACR,EAAKjU,KAAKC,eAAV,uCAAyB,WAAOpE,EAAOqE,GAAd,2BAAAjE,EAAA,yDAClBJ,EADkB,wBAEbE,EAA8CmE,EAA9CnE,SAAUC,EAAoCkE,EAApClE,SAAUuX,EAA0BrT,EAA1BqT,MAAOC,EAAmBtT,EAAnBsT,MAAOR,EAAY9S,EAAZ8S,QACpC1U,EAAO,CACXvC,WACAC,WACAuX,QACAC,QACAR,WAGE,EAAKjR,MAAMzD,OACbA,EAAKlB,IAAM,EAAK2E,MAAMzD,KAAKlB,KAZR,SAcEiB,EAAgBC,GAdlB,QAcf7C,EAde,SAee,IAApBA,EAASmB,OACnB,EAAKmD,MAAMzB,KAAKvC,WAAaA,GAC/BH,EAAA,EAAQ8I,QAAR,0GACA,EAAK3E,MAAMP,aAEX5D,EAAA,EAAQ8I,QAAR,UAAmBpG,EAAKlB,IAAM,eAAO,eAArC,iBAIFxB,EAAA,EAAQC,MAAR,UAAiByC,EAAKlB,IAAM,eAAO,eAAnC,iBAGF,EAAKgB,cACL,EAAK4B,KAAKyE,cACV,EAAKjB,SAAS,CACZuB,SAAS,IA9BU,wBAiCrBnJ,EAAA,EAAQC,MAAM,4BAjCO,4CAAzB,oCAAA4E,KAAA,iB,EAuCFqT,Q,uCAAU,WAAMtV,GAAN,eAAAvC,EAAA,sEACesC,EAAWC,GAD1B,QACF/C,EADE,SAE4B,IAApBA,EAASmB,QACvBhB,EAAA,EAAQ8I,QAAQ,4BAChB,EAAKlB,SAAS,CACZN,SAAS,IAEX,EAAK9E,eAELxC,EAAA,EAAQC,MAAM,4BATR,2C,yIAeR4E,KAAKrC,gB,kDAILqC,KAAKiD,gB,+BAGG,IAAD,OACPkI,QAAQC,IAAI,iBADL,MAE0CpL,KAAKsB,MAA9CmB,EAFD,EAECA,QAASwQ,EAFV,EAEUA,MAAO3O,EAFjB,EAEiBA,QAAS0N,EAF1B,EAE0BA,MAAOnU,EAFjC,EAEiCA,KAClCsF,EACJ,uBAAQtE,KAAK,UAAU2E,QAASxD,KAAKmT,WAArC,4BAKF,OACE,wBAAMhQ,MAAOA,GACX,wBACEA,MAAQtF,EAAKlB,IAAe,2BAAT,2BACnB2H,QAASA,EACTC,KAAMvE,KAAKwT,QACXhP,SAAU,WACR,EAAKzB,SAAS,CACZuB,SAAS,KAGbD,OAAO,eACPD,WAAW,gBAEX,kBAAC,GAAD,CACEvG,KAAMA,EACNmU,MAAOA,EACPnQ,QAAS,SAAAtC,GAAI,OAAK,EAAKA,KAAOA,MAGlC,wBACEkD,QAASA,EACTgC,UAAU,EACVK,OAAO,MACP5B,QAASlD,KAAKkD,QACd2B,WAAYoO,EACZvO,WAAY,CACVC,gBAAiBuD,GACjBtD,iBAAiB,U,GApLVzD,aA4LJE,gBACb,SAAAC,GAAK,MAAK,CAAEzD,KAAMyD,EAAMzD,QACxB,CAAEkB,cAFWsC,CAGb2R,I,qCCnMIS,I,mNACJnS,MAAQ,G,EAERoS,YAAc,WACZ,EAAKpU,MAAMX,aAAa,gBACxB,EAAKW,MAAMqO,QAAQgG,QAAQ,U,wEAI3B,OACE,wBAAKxT,UAAU,aACb,wBAAKkO,KAAM,GAAIlO,UAAU,SACzB,wBAAKkO,KAAM,GAAIlO,UAAU,SACvB,mCACA,mGACA,uBAAQtB,KAAK,UAAU2E,QAASxD,KAAK0T,aAArC,kC,GAfavS,cAwBRE,eACb,KACA,CAAE1C,gBAFW0C,CAGboS,I,oBCxBMG,I,aAAAA,SACFC,G,2MACJvS,MAAQ,G,EAKRwS,QAAU,SAAA7R,GAAQ,MAKZ,EAAK3C,MAAMzB,KAFbvC,EAHc,EAGdA,SACQkC,EAJM,EAId+T,KAAQ/T,MAOV,QACe,UAAblC,IACA2G,EAAK4O,WACwB,IAA7BrT,EAAMuW,QAAQ9R,EAAKE,SAGVF,EAAKiL,YAELjL,EAAKiL,SAASD,MAAK,SAAAhL,GAAI,OAAiC,IAA7BzE,EAAMuW,QAAQ9R,EAAKE,S,EAW3D6R,aAAe,SAAArD,GAAa,IAClBsD,EAAa,EAAK3U,MAAM2O,SAAxBgG,SACR,OAAOtD,EAASU,QAAO,SAACC,EAAKrP,GAE3B,GAAI,EAAK6R,QAAQ7R,GAAO,CAAC,IACfkB,EAA+BlB,EAA/BkB,MAAOhB,EAAwBF,EAAxBE,IAAKyO,EAAmB3O,EAAnB2O,KAAM1D,EAAajL,EAAbiL,SAC1B,GAAIA,EACYA,EAASD,MACrB,SAAAiH,GAAK,OAAqC,IAAjCD,EAASF,QAAQG,EAAM/R,UAGhC,EAAKgS,QAAUlS,EAAKE,KAGtBmP,EAAI/H,KACF,kBAACqK,GAAD,CACEzR,IAAKA,EACLgB,MACE,8BACE,uBAAMtE,KAAM+R,IACZ,8BAAOzN,KAIV,EAAK6Q,aAAa9G,UAInB+G,IAAahS,EAAKE,MAAuC,IAAhC8R,EAASF,QAAQ9R,EAAKE,MACjD,EAAK7C,MAAMX,aAAasD,EAAKkB,OAE/BmO,EAAI/H,KACF,uBAAMtK,KAAN,CAAWkD,IAAKA,GACd,kBAAC,IAAD,CACElC,GAAIkC,EACJqB,QAAS,kBAAM,EAAKlE,MAAMX,aAAasD,EAAKkB,SAE5C,uBAAMtE,KAAM+R,IACZ,8BAAOzN,MAMjB,OAAOmO,IACN,K,2FASHtR,KAAKoU,UAAYpU,KAAKgU,aAAarD,M,+BAO3B,IACFsD,EAAajU,KAAKV,MAAM2O,SAAxBgG,SACAE,EAAUnU,KAAKmU,QAKrB,OAJqC,IAAjCF,EAASF,QAAQ,cACnBE,EAAW,YAIX,yBAAK9T,UAAU,YACb,kBAAC,IAAD,CAAMF,GAAG,IAAIE,UAAU,mBACrB,yBAAKC,IAAKC,KAAMC,IAAI,SACpB,mDAEF,wBACE+T,MAAM,OACNC,KAAK,SACLC,aAAc,CAACN,GACfO,gBAAiB,CAACL,IAEjBnU,KAAKoU,gB,GApHMjT,aAsIPE,gBACb,SAAAC,GAAK,MAAK,CAAEzD,KAAMyD,EAAMzD,QACxB,CAAEc,gBAFW0C,CAGboT,YAAWZ,KCvILa,I,aAAAA,SACFC,G,2MACJrT,MAAQ,CACNjD,cAAe,GACfC,QAAS,GACTsW,YAAa,I,EAyCfC,oBAAsB,SAAClE,EAAUsD,GAAa,2BAE5C,YAAmBtD,EAAnB,+CAA6B,CAAC,IAAnB1O,EAAkB,QAC3B,GAAmC,IAA/BgS,EAASF,QAAQ9R,EAAKE,KACxB,OAAOF,EAGT,GAAIA,EAAKiL,SAAU,CACjB,IAAMgH,EAAQ,EAAKW,oBAAoB5S,EAAKiL,SAAU+G,GACtD,GAAIC,EACF,OAAOA,IAV+B,oF,EAmB9CY,SAAW,WAAO,IACRb,EAAa,EAAK3U,MAAM2O,SAAxBgG,SACFc,EAAO,EAAKF,oBAAoBlE,GAAUsD,GAEhD,OADcc,EAAOA,EAAK5R,MAAQ,I,EASpC6R,SAAW,WACTN,GAAQ,CACNvR,MAAO,wCACPkB,OAAQ,eACRD,WAAY,eAEZG,KAAM,WACJ,EAAKjF,MAAMP,gB,uNA/D0Bf,EAAW,gB,gBAA5CK,E,EAAAA,cAAeC,E,EAAAA,QACvB0B,KAAKiV,UACLjV,KAAK+C,SAAS,CACZ1E,gBACAC,Y,mJAMF4W,cAAclV,KAAKmV,a,gCAIV,IAAD,OACRnV,KAAKmV,UAAYC,aAAY,WAC3B,IAAMR,EAAc3E,GAAY,IAAIG,MACpC,EAAKrN,SAAS,CAAE6R,kBACf,O,+BAuDHzJ,QAAQC,IAAI,mBADL,MAEyCpL,KAAKsB,MAA7CsT,EAFD,EAECA,YAAavW,EAFd,EAEcA,cAAeC,EAF7B,EAE6BA,QAF7B,EAIqB0B,KAAKV,MAAzBzB,EAJD,EAICA,KAAMe,EAJP,EAIOA,UACd,OACE,yBAAKuB,UAAU,UACb,yBAAKA,UAAU,cACb,8CAAUtC,EAAKvC,UACf,kBAACoG,GAAD,CAAY8B,QAASxD,KAAKgV,UAA1B,iBAEF,yBAAK7U,UAAU,iBACb,yBAAKA,UAAU,sBAAsBvB,GACrC,yBAAKuB,UAAU,uBACb,8BAAOyU,GACP,yBAAKxU,IAAK/B,EAAeiC,IAAI,OAC7B,8BAAOhC,U,GA5GE6C,aAuHfkU,GAAaZ,YAAWE,IAEftT,gBACb,SAAAC,GAAK,MAAK,CAAE1C,UAAW0C,EAAM1C,UAAWf,KAAMyD,EAAMzD,QACpD,CAAEkB,cAFWsC,CAGbgU,ICrHMC,G,KAAAA,OAAQC,G,KAAAA,MAAOC,G,KAAAA,QACjBC,G,2MACJnU,MAAQ,G,wEAIN,OADiBtB,KAAKV,MAAdzB,KACElB,IAKR,wBAAQwD,UAAU,SAChB,kBAACoV,GAAD,KACE,kBAAC,GAAD,OAEF,4BACE,kBAAC,GAAD,MACA,kBAACC,GAAD,CAASzU,MAAO,CAAE4F,gBAAiB,OAAQ+I,OAAQ,KACjD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUgG,KAAK,IAAI1F,OAAK,EAAC/P,GAAG,UAC5B,kBAAC,IAAD,CAAO6P,KAAK,QAAQC,UAAWtO,KAC/B,kBAAC,IAAD,CAAOqO,KAAK,YAAYC,UAAWvN,KACnC,kBAAC,IAAD,CAAOsN,KAAK,WAAWC,UAAWF,KAClC,kBAAC,IAAD,CAAOC,KAAK,QAAQC,UAAWiD,KAC/B,kBAAC,IAAD,CAAOlD,KAAK,QAAQC,UAAWgC,KAC/B,kBAAC,IAAD,CAAOjC,KAAK,cAAcC,UAAWhL,KACrC,kBAAC,IAAD,CAAO+K,KAAK,cAAcC,UAAWnK,KACrC,kBAAC,IAAD,CAAOkK,KAAK,eAAeC,UAAWpK,KACtC,kBAAC,IAAD,CAAOmK,KAAK,SAASC,UAAW9H,KAChC,kBAAC,IAAD,CAAO8H,UAAW0D,OAGtB,kBAAC6B,GAAD,CAAQvU,MAAO,CAAE4U,UAAW,SAAU3U,MAAO,UAA7C,mHAzBG,kBAAC,IAAD,CAAUf,GAAG,e,GANNkB,aAwCLE,gBAAQ,SAAAC,GAAK,MAAK,CAAEzD,KAAMyD,EAAMzD,QAAhCwD,CAAyCoU,IC1CzCG,G,2MAbbtU,MAAQ,G,wEAEN,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOwO,KAAK,SAASC,UAAW7Q,KAChC,kBAAC,IAAD,CAAO4Q,KAAK,IAAIC,UAAW0F,W,GAPnBtU,a,2lBCQlB,IASM0U,GAAW7W,IAuBF8W,8BAAgB,CAC7BlX,UAhCgB,WAAoC,IAAnC0C,EAAkC,uDAD/B,GACoBoI,EAAW,uCACnD,OAAQA,EAAO7K,MACb,I9BZ0B,iB8BaxB,OAAO6K,EAAO9K,UAChB,QACE,OAAO0C,IA4BXzD,KAxBW,WAA+B,IAA9ByD,EAA6B,uDAArBuU,GAAUnM,EAAW,uCACzC,OAAQA,EAAO7K,MACb,I9BpBwB,e8BqBtB,OAAO6K,EAAO7L,KAChB,I9BrBoB,W8BsBlB,IAAM0C,EAAemJ,EAAOnJ,aAC5B,OAAO,MAAKe,EAAZ,CAAmBf,iBACrB,I9BvBsB,a8BwBpB,MAAO,GACT,QACE,OAAOe,MCxBEyU,0BACbC,GACAC,+BAAoBC,2BAAgBC,QCJtCC,IAAS9S,OACP,kBAAC,IAAD,CAAU/E,MAAOA,IACf,kBAAC,GAAD,OAEF8X,SAASC,eAAe,U,oBCX1BC,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.3a4043c3.chunk.js","sourcesContent":["/*\r\n * @Author: dingdongzhao\r\n * @Date: 2019-09-15 23:50:37\r\n * @Last Modified by: dingdongzhao\r\n * @Last Modified time: 2019-10-28 14:53:43\r\n */\r\nimport axios from \"axios\";\r\nimport { message } from \"antd\";\r\n\r\n/**\r\n * 使用单例模式封装 axios,在创建 axios 实例的时候，避免重复传入一样的参数\r\n * 参数接收 url ,data , method\r\n * 根据 method 决定发送的类型\r\n */\r\n\r\nlet instance = null;\r\nlet auth = null;\r\n/**\r\n * 使用新的 Promise 包装 axios的目的为\r\n * 1. 优化返回值，返回response.data\r\n * 2. 统一错误信息处理,采用 message.error 显示\r\n * 3. 不适用 async await 改造为同步流程的目的，是将i/o事件丢给事件循环处理，主线程可以处理其他事件，加快反应速度\r\n */\r\n\r\nexport default function(url, data = {}, method = \"GET\") {\r\n  return new Promise((resolve, reject) => {\r\n    let promise = null;\r\n    if (!instance) {\r\n      instance = axios.create({\r\n        //baseURL: 'http://127.0.0.1:5000',\r\n        timeout: 1000,\r\n        auth\r\n      });\r\n    }\r\n    if (method === \"GET\") {\r\n      promise = instance.get(url, {\r\n        params: data\r\n      });\r\n    } else {\r\n      promise = instance.post(url, data);\r\n    }\r\n\r\n    promise\r\n      .then(response => {\r\n        resolve(response.data);\r\n      })\r\n      .catch(err => {\r\n        message.error(err.message);\r\n      });\r\n  });\r\n}\r\n","import jsonp from \"jsonp\";\r\nimport { message } from \"antd\";\r\n\r\nimport ajax from \"./ajax\";\r\n\r\n// 登陆\r\nexport const login = async (username, password) =>\r\n  ajax(\"/login\", { username, password }, \"POST\");\r\n\r\n// 添加类别\r\nexport const addCategory = (categoryName, parentId) =>\r\n  ajax(\"/manage/category/add\", { categoryName, parentId }, \"POST\");\r\n// 更新类别\r\nexport const updateCategory = (categoryName, categoryId) =>\r\n  ajax(\"/manage/category/update\", { categoryName, categoryId }, \"POST\");\r\n\r\n// 获取一级或某个二级分类列表\r\nexport const getCategory = parentId =>\r\n  ajax(\"/manage/category/list\", { parentId }, \"GET\");\r\n\r\n// 根据分类ID 获取分类名称\r\nexport const getCategoryInfo = async categoryId =>\r\n  ajax(\"/manage/category/info\", { categoryId }, \"GET\");\r\n\r\n//对商品进行上架/下架处理\r\nexport const updateProductStatus = async (productId, status) =>\r\n  ajax(\"/manage/product/updateStatus\", { productId, status }, \"POST\");\r\n\r\n/**\r\n * 获取商品分页列表\r\n * @param {string} pageNum 当前页码\r\n * @param {string} pageSize  一页显示数量\r\n */\r\nexport const getProductList = (pageNum, pageSize) =>\r\n  ajax(\"/manage/product/list\", { pageNum, pageSize }, \"GET\");\r\n\r\n// 优化个查询条件接口\r\nexport const searchProductList = (pageNum, pageSize, searchName, searchType) =>\r\n  ajax(\r\n    \"/manage/product/search\",\r\n    { pageNum, pageSize, [searchType]: searchName },\r\n    \"GET\"\r\n  );\r\n\r\n//删除商品\r\nexport const delProduct = _id =>\r\n  ajax(\"/manage/product/delete\", { _id }, \"POST\");\r\n\r\n// 删除图片\r\nexport const deleteImg = name => ajax(\"/manage/img/delete\", { name }, \"POST\");\r\n\r\n// 更新/添加商品\r\nexport const AddOrUpdateProduct = ({\r\n  _id,\r\n  categoryId,\r\n  pCategoryId,\r\n  name,\r\n  desc,\r\n  price,\r\n  detail,\r\n  imgs\r\n}) =>\r\n  ajax(\r\n    `/manage/product/${_id ? \"update\" : \"add\"}`,\r\n    { _id, categoryId, pCategoryId, name, desc, price, detail, imgs },\r\n    \"POST\"\r\n  );\r\n\r\n// 获取角色列表\r\nexport const getRoleList = () => ajax(\"/manage/role/list\", {}, \"GET\");\r\n\r\n// 添加角色\r\nexport const addRole = roleName =>\r\n  ajax(\"/manage/role/add\", { roleName }, \"POST\");\r\n\r\n// 更新角色权限\r\nexport const updateRole = ({ _id, menus, auth_time, auth_name }) =>\r\n  ajax(\"/manage/role/update\", { _id, menus, auth_time, auth_name }, \"POST\");\r\n\r\n// 获取用户列表\r\nexport const getUserList = () => ajax(\"/manage/user/list\", {}, \"GET\");\r\n\r\n// 添加/修改用户\r\nexport const addOrUpdateUser = user =>\r\n  ajax(`/manage/user/${user._id ? \"update\" : \"add\"}`, { ...user }, \"POST\");\r\n\r\n// 删除用户\r\nexport const deleteUser = userId =>\r\n  ajax(\"/manage/user/delete\", { userId }, \"POST\");\r\n\r\n//使用 jsonp 发送获取天气连接，jsonp 可以解决浏览器端 GET 请求跨域问题\r\nexport const getWeather = city => {\r\n  return new Promise((resolve, reject) => {\r\n    const url = `http://api.map.baidu.com/telematics/v3/weather?location=${city}&output=json&ak=3p49MVra6urFRGOT9s8UBWr2`;\r\n    jsonp(url, {}, (err, data) => {\r\n      if (!err && data.error === 0) {\r\n        const { dayPictureUrl, weather } = data.results[0].weather_data[0];\r\n        resolve({ dayPictureUrl, weather });\r\n      } else {\r\n        message.error(\"获取天气信息失败\");\r\n      }\r\n    });\r\n  });\r\n};\r\n","const store = require('store');\r\n\r\nconst USERKEY = 'user-key';\r\nexport default {\r\n  saveUser(user) {\r\n    store.set(USERKEY, user);\r\n  },\r\n  getUser() {\r\n    return store.get(USERKEY) || {};\r\n  },\r\n  removeUser() {\r\n    store.remove(USERKEY);\r\n  }\r\n};\r\n","/**\r\n * 包含n个action creator 函数的模块\r\n * async action：对象{type:'xxx',data:xxx}\r\n * sync action：函数 dispatch=>{}\r\n */\r\nimport { login } from \"../api\";\r\nimport { SET_HEAD_TITLE, RECIVER_USER, SHOW_MSG ,RESET_USER} from \"./action-types\";\r\nimport storageUtils from \"../utils/storageUtils\";\r\n\r\n/**\r\n * sync action 用于设置标题名称\r\n */\r\nexport const setHeadTitle = headTitle => ({ type: SET_HEAD_TITLE, headTitle });\r\n\r\n/**\r\n * 保存用户对象\r\n */\r\nexport const reciverUser = user => ({ type: RECIVER_USER, user });\r\n\r\n/**\r\n * 保存登陆错误信息\r\n */\r\nexport const showMsg = errorMessage => ({ type: SHOW_MSG, errorMessage });\r\n\r\n\r\n/**\r\n * 退出登陆\r\n * 重置本地locationstroage\r\n * 重置 state\r\n */\r\n export const resetUser = ()=>{\r\n  storageUtils.removeUser()\r\n  return {type:RESET_USER}\r\n }\r\n\r\n/**\r\n * async action\r\n * 异步发送登陆请求\r\n * 成功则调用 reciver_user 报存 user 对象，并且保存到 locationstorage 中\r\n * 失败则调用 show_error,将错误信息报错user对象的 errorMessage 属性中\r\n */\r\nexport const userLogin = (username, password) => {\r\n  return async dispatch => {\r\n    //1 登陆\r\n    const response = await login(username, password);\r\n    if (response && response.status === 0) {\r\n      const user = response.data;\r\n      //2 成功则调用 action 保存 user 对象到 redux管理的 state.user 中，并且保存到 locationstorage中\r\n      storageUtils.saveUser(user);\r\n      dispatch(reciverUser(user));\r\n    } else {\r\n      //2 失败则调用 action 保存 message 到 redux 管理的 state.user.errorMessage\r\n      dispatch(showMsg(response.msg));\r\n    }\r\n  };\r\n};\r\n","/**\r\n * 包含N个action的type常量标识名称的模块\r\n */\r\n\r\nexport const SET_HEAD_TITLE = \"set_head_title\";\r\nexport const RECIVER_USER = \"reciver_user\";\r\nexport const SHOW_MSG = \"show_msg\";\r\nexport const RESET_USER = \"reset_user\";\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Form, Icon, Input, Button, message } from \"antd\";\r\n\r\nimport { userLogin } from \"../../redux/actions\";\r\nimport logo from \"../../assets/images/logo.png\";\r\nimport \"./login.less\";\r\n\r\nconst { Item } = Form;\r\n\r\nclass Login extends Component {\r\n  /**\r\n   * 表单提交事件\r\n   * 1.关闭默认事件\r\n   * 2.判断表单验证是否通过\r\n   * 3.调用 redux action 登陆请求\r\n   */\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((error, value) => {\r\n      if (!error) {\r\n        const { username, password } = value;\r\n        // 使用 redux 完成登陆\r\n        this.props.userLogin(username, password);\r\n        /**\r\n         * this.props.history.replace(\"/home\");\r\n         * 无需再进行页面跳转，等待 state 状态刷新，会执行 render()\r\n         * 然后再判断 user 属性 判断是否登陆成功\r\n         */\r\n      } else {\r\n        message.error(\"验证失败\");\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * value 输入的内容\r\n   * callback 回调内包含字符串则表示验证失败\r\n   * callback 不包含则代表回调成功\r\n   */\r\n  validator = (rule, value, callback) => {\r\n    if (!value) {\r\n      callback(\"密码不能为空\");\r\n    } else if (value.length > 12) {\r\n      callback(\"密码不能大于12位\");\r\n    } else if (value.length < 4) {\r\n      callback(\"密码不能小于4位\");\r\n    } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\r\n      callback(\"密码只能为密码数字下划线组成\");\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    /**\r\n     * 当 redux 管理的 user 对象进行更新\r\n     * 会执行 render()判断是否已经登陆\r\n     * 如果登陆则直接跳转 /home\r\n     */\r\n    const user = this.props.user;\r\n    if (user && user._id) {\r\n      return <Redirect to=\"/home\" />;\r\n    }\r\n\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <div className=\"login\">\r\n        <header className=\"login-title\">\r\n          <img src={logo} alt=\"logo\"></img>\r\n          <h1>React 后台登陆系统</h1>\r\n        </header>\r\n        <section className=\"login-content\">\r\n          <div className={!user.errorMessage ? \"error-msg\" : \"error-msg show\"}>\r\n            {user.errorMessage}\r\n          </div>\r\n          <h2>登录</h2>\r\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n            <Item>\r\n              {getFieldDecorator(\"username\", {\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    whitespace: true,\r\n                    message: \"用户名必须输入\"\r\n                  },\r\n                  { min: 4, message: \"用户名不能小于4位数\" },\r\n                  { max: 12, message: \"用户名不能大于12位数\" }\r\n                ]\r\n              })(\r\n                <Input\r\n                  prefix={\r\n                    <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                  }\r\n                  placeholder=\"用户名\"\r\n                />\r\n              )}\r\n            </Item>\r\n            <Item>\r\n              {getFieldDecorator(\"password\", {\r\n                rules: [{ validator: this.validator }]\r\n              })(\r\n                <Input\r\n                  prefix={\r\n                    <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                  }\r\n                  type=\"password\"\r\n                  placeholder=\"密码\"\r\n                />\r\n              )}\r\n            </Item>\r\n            <Item>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-form-button\"\r\n              >\r\n                登陆\r\n              </Button>\r\n            </Item>\r\n          </Form>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrapLogin = Form.create()(Login);\r\n\r\nexport default connect(\r\n  state => ({ user: state.user }),\r\n  { userLogin }\r\n)(WrapLogin);\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./home.less\";\r\nclass Home extends Component {\r\n  state = {};\r\n  render() {\r\n    return <div className=\"home\">欢迎使用 react 后台</div>;\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nimport \"./index.less\";\r\nexport default function LinkButton(props) {\r\n  return <button {...props} className=\"linkButton\"></button>;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form, Select, Input } from \"antd\";\r\n\r\nconst Item = Form.Item;\r\nconst Option = Select.Option;\r\n\r\nclass AddForm extends Component {\r\n  state = {};\r\n\r\n  static propTypes = {\r\n    setForm: PropTypes.func.isRequired, // 通过函数形式向父级传递 form 属性，使之可以获得输入内容\r\n    categorys: PropTypes.array.isRequired, // 获取需要显示的分类列表，用于选择添加\r\n    parentId: PropTypes.string.isRequired // 用于显示默认选择的分类，不设置0，是因为可能是在二级菜单点击添加跳转\r\n  };\r\n\r\n  UNSAFE_componentWillMount() {\r\n    this.props.setForm(this.props.form);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      form: { getFieldDecorator },\r\n      categorys,\r\n      parentId\r\n    } = this.props;\r\n    return (\r\n      <Form>\r\n        <Item>\r\n          {getFieldDecorator(\"parentId\", { initialValue: parentId })(\r\n            <Select>\r\n              <Option value=\"0\">一级分类列表</Option>\r\n              {categorys.map((item, index) => (\r\n                <Option key={index} value={item._id}>\r\n                  {item.name}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          )}\r\n        </Item>\r\n        <Item>\r\n          {getFieldDecorator(\"categoryName\", {\r\n            initialValue: \"\",\r\n            rules: [\r\n              { required: true, message: \"分类名称必须输入\" },\r\n              {\r\n                max: 10,\r\n                message: \"分类名称需要小于10位\"\r\n              },\r\n              { pattern: /^[\\u4e00-\\u9fa5]+$/, message: \"分类名称只能是中文\" }\r\n            ]\r\n          })(<Input placeholder=\"请输入分类名称\"></Input>)}\r\n        </Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrapAddForm = Form.create()(AddForm);\r\n\r\nexport default WrapAddForm;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form, Input } from \"antd\";\r\n\r\nconst Item = Form.Item;\r\nclass UpdateForm extends Component {\r\n  state = {};\r\n\r\n  static propTypes = {\r\n    categoryName: PropTypes.string.isRequired,\r\n    setForm: PropTypes.func.isRequired\r\n  };\r\n\r\n  UNSAFE_componentWillMount() {\r\n    this.props.setForm(this.props.form);\r\n  }\r\n\r\n  // 组件即将被卸载的生命周期\r\n  componentWillUnmount() {}\r\n\r\n  render() {\r\n    const categoryName = this.props.categoryName;\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Form>\r\n        <Item>\r\n          {getFieldDecorator(\"categoryName\", {\r\n            initialValue: categoryName,\r\n            rules: [\r\n              { required: true, message: \"分类名称必须输入\" },\r\n              { max: 12, message: \"分类名称需要小于12位\" },\r\n              { pattern: /^[\\u4e00-\\u9fa5]+$/, message: \"分类名称必须是中文\" }\r\n            ]\r\n          })(<Input placeholder=\"请输入分类名称\"></Input>)}\r\n        </Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrapUpdateForm = Form.create()(UpdateForm);\r\n\r\nexport default WrapUpdateForm;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Button, Icon, Table, message, Modal } from \"antd\";\r\n\r\nimport \"./category.less\";\r\nimport LinkButton from \"../../components/link-button\";\r\nimport { getCategory, updateCategory, addCategory } from \"../../api\";\r\nimport AddForm from \"./add-form\";\r\nimport UpdateForm from \"./update-form\";\r\nclass Category extends Component {\r\n  state = {\r\n    loading: true, //是否显示加载动画\r\n    selectCategory: {}, // 选择中的分类对象,用于传递给更新组件的categoryName\r\n    categorys: [], // 一级分类列表\r\n    subCategorys: [], // 二级分类列表\r\n    parentId: \"0\", // 选择的分类ID\r\n    parentName: \"\", // 选择中的分类名称,用于更新title\r\n    modalVisible: 0 // 控制显示modal控件,0隐藏,1显示添加,2显示修改\r\n  };\r\n\r\n  // 初始化异步数据\r\n  componentDidMount() {\r\n    this.getCategorys();\r\n  }\r\n  // 初始化同步数据\r\n  UNSAFE_componentWillMount() {\r\n    this.initColumns();\r\n  }\r\n\r\n  //显示二级分类列表的点击事件\r\n  showSubCategorys = ({ _id, name }) => {\r\n    this.setState(\r\n      {\r\n        parentId: _id,\r\n        parentName: name\r\n      },\r\n      () => {\r\n        this.getCategorys();\r\n      }\r\n    );\r\n  };\r\n\r\n  /**\r\n   * 初始化表格的标题内容，因为可能将内容写道配置文件中\r\n   * 在添加按钮标签时候，判断 parentId 来区别是否要添加查看子分类按钮\r\n   */\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: \"分类名称\",\r\n        dataIndex: \"name\"\r\n      },\r\n      {\r\n        title: \"操作\",\r\n        width: 300,\r\n        render: category => (\r\n          <span>\r\n            <LinkButton onClick={() => this.showUpdateModal(category)}>\r\n              修改分类\r\n            </LinkButton>\r\n            {this.state.parentId === \"0\" ? (\r\n              <LinkButton onClick={() => this.showSubCategorys(category)}>\r\n                查看子分类\r\n              </LinkButton>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n  };\r\n\r\n  // 获取一级/二级分类列表\r\n  getCategorys = async parentId => {\r\n    parentId = parentId || this.state.parentId;\r\n    const result = await getCategory(parentId);\r\n    if (result && result.status === 0) {\r\n      const categorys = result.data;\r\n      if (Object.is(parentId, \"0\")) {\r\n        this.setState({\r\n          loading: false,\r\n          categorys\r\n        });\r\n      } else {\r\n        this.setState({\r\n          loading: false,\r\n          subCategorys: categorys\r\n        });\r\n      }\r\n    } else {\r\n      message.error(\"获取分类列表失败\");\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 显示更新弹窗\r\n   * 由于更新 selectCategory ，不需要进行页面重新渲染\r\n   * 则不将此属性添加到 state 中\r\n   */\r\n  showUpdateModal = category => {\r\n    this.selectCategory = category;\r\n    this.setState({\r\n      modalVisible: 2\r\n    });\r\n  };\r\n\r\n  // 显示添加弹窗\r\n  showAddModal = () => {\r\n    this.setState({\r\n      modalVisible: 1\r\n    });\r\n  };\r\n\r\n  // 显示一级分类菜单\r\n  showCategorys = () => {\r\n    this.setState({\r\n      subCategorys: [],\r\n      parentId: \"0\",\r\n      parentName: \"\"\r\n    });\r\n  };\r\n\r\n  // 关闭添加或者更新弹窗\r\n  closeModal = () => {\r\n    this.form.resetFields();\r\n    this.setState({\r\n      modalVisible: 0\r\n    });\r\n  };\r\n\r\n  /**\r\n   * 添加分类列表\r\n   * 如果添加的分类，不是当前分类列表则不进行刷新\r\n   * 如果是在二级分类列表，添加一级分类，需要进行刷新，并且传入刷新的分类ID\r\n   */\r\n  addCategory = () => {\r\n    this.form.validateFields(async (error, value) => {\r\n      if (!error) {\r\n        const { parentId, categoryName } = value;\r\n        this.closeModal();\r\n        const response = await addCategory(categoryName, parentId);\r\n        debugger;\r\n        if (response.status === 0) {\r\n          if (this.state.parentId === parentId) {\r\n            this.getCategorys();\r\n          } else if (parentId === \"0\") {\r\n            this.getCategorys(0);\r\n          }\r\n          message.success(\"添加成功\");\r\n        } else {\r\n          message.success(\"添加失败\");\r\n        }\r\n      } else {\r\n        message.error(\"验证失败\");\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * 变量更新需要进行页面重新渲染，则使用state\r\n   * 变量更新无需进行页面渲染，则直接添加到 this 上\r\n   *\r\n   * 通过 this.form 获得 updateForm 组件的输入值\r\n   * 调用api接口进行更新，成功则重新获取分类列表\r\n   * 重置表单输入内容 form.resetFields\r\n   * 关闭弹窗\r\n   */\r\n  updateCategory = () => {\r\n    this.form.validateFields(async (error, value) => {\r\n      if (!error) {\r\n        const { categoryName } = value;\r\n        this.closeModal();\r\n        const response = await updateCategory(\r\n          categoryName,\r\n          this.selectCategory._id\r\n        );\r\n        if (response && response.status === 0) {\r\n          this.getCategorys();\r\n          message.success(\"修改成功\");\r\n        } else {\r\n          message.error(\"验证失败\");\r\n        }\r\n      } else {\r\n        message.error(\"验证失败\");\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * 通过获得分类接口，异步加载表格内容\r\n   * 判断分类ID是否为0，来决定显示一级/二级分类\r\n   *\r\n   * 通过向子组件 updateForm 传递函数的方式，获取子组件的 form 对象，用来获取用户输入的值\r\n   */\r\n\r\n  render() {\r\n    const {\r\n      loading,\r\n      categorys,\r\n      parentId,\r\n      parentName,\r\n      subCategorys\r\n    } = this.state;\r\n    // 防止在第一次渲染的时候，selectCategory 对象为 undefind，导致的获取 name 报错\r\n    const category = this.selectCategory ? this.selectCategory : {};\r\n    const title =\r\n      parentId === \"0\" ? (\r\n        \"一级分类列表\"\r\n      ) : (\r\n        <span>\r\n          <LinkButton onClick={this.showCategorys}>一级分类菜单</LinkButton>\r\n          <Icon type=\"arrow-right\" style={{ marginRight: \"5px\" }}></Icon>\r\n          <span>{parentName}</span>\r\n        </span>\r\n      );\r\n    const extra = (\r\n      <Button type=\"primary\" onClick={() => this.showAddModal()}>\r\n        <Icon type=\"plus\"></Icon>\r\n        添加\r\n      </Button>\r\n    );\r\n\r\n    return (\r\n      <div className=\"category\">\r\n        <Modal\r\n          title=\"添加分类\"\r\n          cancelText={\"取消\"}\r\n          okText={\"确认\"}\r\n          visible={this.state.modalVisible === 1}\r\n          onOk={this.addCategory}\r\n          onCancel={() => this.closeModal()}\r\n        >\r\n          <AddForm\r\n            parentId={parentId}\r\n            categorys={categorys}\r\n            setForm={form => {\r\n              this.form = form;\r\n            }}\r\n          />\r\n        </Modal>\r\n        <Modal\r\n          title=\"更新分类\"\r\n          cancelText={\"取消\"}\r\n          okText={\"确认\"}\r\n          visible={this.state.modalVisible === 2}\r\n          onOk={this.updateCategory}\r\n          onCancel={() => this.closeModal()}\r\n        >\r\n          <UpdateForm\r\n            setForm={form => {\r\n              this.form = form;\r\n            }}\r\n            categoryName={category.name}\r\n          />\r\n        </Modal>\r\n        <Card title={title} className=\"category-card\" extra={extra}>\r\n          <Table\r\n            bordered\r\n            pagination={{ defaultPageSize: 5, showQuickJumper: true }}\r\n            loading={loading}\r\n            columns={this.columns}\r\n            dataSource={parentId === \"0\" ? categorys : subCategorys}\r\n            rowKey=\"_id\"\r\n          />\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Category;\r\n","import React, { Component } from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport { Card, Button } from \"antd\"\r\n\r\n/**\r\n * 柱形图组件\r\n */\r\nclass Bar extends Component {\r\n  state = {\r\n    sales: [120, 200, 150, 80, 70, 110, 130],\r\n    stores: [110, 150, 100, 180, 170, 130, 160]\r\n  };\r\n\r\n  /**\r\n   * 获取图标配置参数\r\n   */\r\n  getOption = (sales, stores) => {\r\n    return {\r\n      title: {\r\n        text: 'ECharts 入门示例'\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data: ['销量', '库存']\r\n      },\r\n      xAxis: {// 分类名称\r\n        type: 'category',\r\n        data: ['毛衣', '裤子', '球衣', '鞋子', '袜子', '内衣', '袜子']\r\n      },\r\n      yAxis: {\r\n        type: 'value'\r\n      },\r\n      series: [{ // 一个对象数据代表着一个柱形图，可以输入2组或者以上数据，则显示多组柱形图\r\n        name: '销量',\r\n        data: sales,\r\n        type: 'bar'// 图形类别\r\n      }, { // 一个对象数据代表着一个柱形图，可以输入2组或者以上数据，则显示多组柱形图\r\n        name: '库存',\r\n        data: stores,\r\n        type: 'bar'// 图形类别\r\n      }]\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 更新图标数据\r\n   */\r\n  update = () => {\r\n    this.setState(({ sales, stores }) => (\r\n      {\r\n        sales: sales.map(item => item + 1),\r\n        stores: stores.map(item => item + 10)\r\n      }\r\n    ))\r\n\r\n  }\r\n\r\n  render () {\r\n    const { stores, sales } = this.state\r\n\r\n    return (\r\n      <div>\r\n        <Card >\r\n          <Button type=\"primary\" onClick={this.update}>更新</Button>\r\n        </Card>\r\n\r\n        <Card title=\"柱形图一\" >\r\n          <ReactEcharts option={this.getOption(sales, stores)} />\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Bar;\r\n","import React, { Component } from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport { Card, Button } from \"antd\"\r\n\r\n/**\r\n * 折线图组件\r\n */\r\nclass Line extends Component {\r\n  state = {\r\n    sales: [120, 200, 150, 80, 70, 110, 130],\r\n    stores: [110, 150, 100, 180, 170, 130, 160]\r\n  };\r\n\r\n  getOption = (sales, stores) => {\r\n    return {\r\n      title: {\r\n        text: 'ECharts 入门示例'\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data: ['销量', '库存']\r\n      },\r\n      xAxis: {// 分类名称\r\n        type: 'category',\r\n        data: ['毛衣', '裤子', '球衣', '鞋子', '袜子', '内衣', '袜子']\r\n      },\r\n      yAxis: {\r\n        type: 'value'\r\n      },\r\n      series: [{ // 一个对象数据代表着一个柱形图，可以输入2组或者以上数据，则显示多组柱形图\r\n        name: '销量',\r\n        data: sales,\r\n        type: 'line'// 图形类别\r\n      }, { // 一个对象数据代表着一个柱形图，可以输入2组或者以上数据，则显示多组柱形图\r\n        name: '库存',\r\n        data: stores,\r\n        type: 'line'// 图形类别\r\n      }]\r\n    };\r\n  }\r\n\r\n  update = () => {\r\n    this.setState(({ sales, stores }) => (\r\n      {\r\n        sales: sales.map(item => item + 1),\r\n        stores: stores.map(item => item + 10)\r\n      }\r\n    ))\r\n\r\n  }\r\n  render () {\r\n    const { stores, sales } = this.state\r\n    return (\r\n      <div>\r\n        <Card >\r\n          <Button type=\"primary\" onClick={this.update}>更新</Button>\r\n        </Card>\r\n\r\n        <Card title=\"线图一\" >\r\n          <ReactEcharts option={this.getOption(sales, stores)} />\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Line;\r\n","import React, { Component } from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport { Card } from \"antd\"\r\n\r\n/**\r\n * 饼图组件\r\n */\r\nclass Pie extends Component {\r\n  state = {\r\n    sales: [120, 200, 150, 80, 70, 110, 130],\r\n    stores: [110, 150, 100, 180, 170, 130, 160]\r\n  };\r\n\r\n  getOption = () => {\r\n    return {\r\n      title: {\r\n        text: '某站点用户访问来源',\r\n        subtext: '纯属虚构',\r\n        x: 'center'\r\n      },\r\n      tooltip: {\r\n        trigger: 'item',\r\n        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n      },\r\n      legend: {\r\n        orient: 'vertical',\r\n        left: 'left',\r\n        data: ['直接访问', '邮件营销', '联盟广告', '视频广告', '搜索引擎']\r\n      },\r\n      series: [\r\n        {\r\n          name: '访问来源',\r\n          type: 'pie',\r\n          radius: '55%',\r\n          center: ['50%', '60%'],\r\n          data: [\r\n            { value: 335, name: '直接访问' },\r\n            { value: 310, name: '邮件营销' },\r\n            { value: 234, name: '联盟广告' },\r\n            { value: 135, name: '视频广告' },\r\n            { value: 1548, name: '搜索引擎' }\r\n          ],\r\n          itemStyle: {\r\n            emphasis: {\r\n              shadowBlur: 10,\r\n              shadowOffsetX: 0,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    };\r\n    ;\r\n  }\r\n\r\n  getOption2 = () => {\r\n    return {\r\n      backgroundColor: '#2c343c',\r\n      title: {\r\n        text: 'Customized Pie',\r\n        left: 'center',\r\n        top: 20,\r\n        textStyle: {\r\n          color: '#ccc'\r\n        }\r\n      },\r\n\r\n      tooltip: {\r\n        trigger: 'item',\r\n        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n      },\r\n\r\n      visualMap: {\r\n        show: false,\r\n        min: 80,\r\n        max: 600,\r\n        inRange: {\r\n          colorLightness: [0, 1]\r\n        }\r\n      },\r\n      series: [\r\n        {\r\n          name: '访问来源',\r\n          type: 'pie',\r\n          radius: '55%',\r\n          center: ['50%', '50%'],\r\n          data: [\r\n            { value: 335, name: '直接访问' },\r\n            { value: 310, name: '邮件营销' },\r\n            { value: 274, name: '联盟广告' },\r\n            { value: 235, name: '视频广告' },\r\n            { value: 400, name: '搜索引擎' }\r\n          ].sort(function (a, b) { return a.value - b.value; }),\r\n          roseType: 'radius',\r\n          label: {\r\n            normal: {\r\n              textStyle: {\r\n                color: 'rgba(255, 255, 255, 0.3)'\r\n              }\r\n            }\r\n          },\r\n          labelLine: {\r\n            normal: {\r\n              lineStyle: {\r\n                color: 'rgba(255, 255, 255, 0.3)'\r\n              },\r\n              smooth: 0.2,\r\n              length: 10,\r\n              length2: 20\r\n            }\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              color: '#c23531',\r\n              shadowBlur: 200,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          },\r\n\r\n          animationType: 'scale',\r\n          animationEasing: 'elasticOut',\r\n          animationDelay: function (idx) {\r\n            return Math.random() * 200;\r\n          }\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  render () {\r\n    const { stores, sales } = this.state\r\n    return (\r\n      <div>\r\n        <Card title=\"饼图一\" >\r\n          <ReactEcharts option={this.getOption(sales, stores)} />\r\n        </Card>\r\n        <Card title=\"饼图二\" >\r\n          <ReactEcharts option={this.getOption2(sales, stores)} />\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Pie;\r\n","import React, { Component } from 'react';\r\n\r\nclass Order extends Component {\r\n  state = {};\r\n  render() {\r\n    return <div>Order</div>;\r\n  }\r\n}\r\n\r\nexport default Order;\r\n","export const PAGE_SIZE = 5; // 默认一页显示的数量\r\nexport const BASE_IMG_URL = \"http://localhost:5000/upload/\";\r\n","import React from \"react\";\r\nimport { Upload, Icon, Modal, message } from \"antd\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { deleteImg } from \"../../api\";\r\nimport { BASE_IMG_URL } from \"../../config/constantConfig\";\r\nfunction getBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = error => reject(error);\r\n  });\r\n}\r\n\r\nexport default class PicturesWall extends React.Component {\r\n  static propTypes = {\r\n    imgs: PropTypes.array\r\n  };\r\n\r\n  /**\r\n   * 初始化 state 属性使用构造函数\r\n   * 使用同步方式更新state 属性,使用 UNSAFE_componentWillMount\r\n   * 使用异步方式更新 state 属性，使用 componentDidMount\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n    const { imgs } = this.props;\r\n    const fileList = [];\r\n    if (imgs && imgs.length > 0) {\r\n      imgs.forEach((name, index) => {\r\n        fileList.push({\r\n          uid: -index,\r\n          name,\r\n          status: \"done\",\r\n          url: `${BASE_IMG_URL}${name}`\r\n        });\r\n      });\r\n    }\r\n    // 初始化状态\r\n    this.state = {\r\n      previewVisible: false, // 标识是否显示大图预览Modal\r\n      previewImage: \"\", // 大图的url\r\n      fileList // 所有已上传图片的数组\r\n    };\r\n  }\r\n\r\n  // 预览modal取消事件\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  // 预览事件\r\n  handlePreview = async file => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n\r\n    this.setState({\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true\r\n    });\r\n  };\r\n\r\n  /**\r\n   * 上传状态改变回调函数\r\n   * 上传成功，修改本地fileList 状态中的name\r\n   * 根据 file status 判断事件类型，是上传，删除，还是更新状态\r\n   */\r\n  handleChange = async ({ file, fileList, event }) => {\r\n    this.setState({ fileList });\r\n    if (file.status === \"done\") {\r\n      file = fileList[fileList.length - 1];\r\n      file.name = fileList[fileList.length - 1].response.data.name;\r\n      message.success(\"上传成功\");\r\n    } else if (file.status === \"removed\") {\r\n      const response = await deleteImg(file.name);\r\n      if (response.status === 0) {\r\n        message.success(\"删除成功\");\r\n      } else {\r\n        message.error(\"删除失败\");\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 将 fileList 传递给父组件，用于获取文件名称\r\n   */\r\n  getFileList = () => {\r\n    return this.state.fileList.map(file => file.name);\r\n  };\r\n\r\n  render() {\r\n    const { previewVisible, previewImage, fileList } = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type=\"plus\" />\r\n        <div>Upload</div>\r\n      </div>\r\n    );\r\n    return (\r\n      <div>\r\n        <Upload\r\n          action=\"/manage/img/upload\" // 上传服务器接口地址\r\n          listType=\"picture-card\" // 图片框样式\r\n          name=\"image\" // 发送到后台的文件参数名称\r\n          fileList={fileList} // 上传的文件\r\n          accept=\"image/*\" // 显示文件显示格式\r\n          onPreview={this.handlePreview} // 预览事件\r\n          onChange={this.handleChange} // 状态改变事件\r\n        >\r\n          {fileList.length >= 3 ? null : uploadButton}\r\n        </Upload>\r\n        <Modal\r\n          visible={previewVisible}\r\n          footer={null}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <img alt=\"example\" style={{ width: \"100%\" }} src={previewImage} />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTyeps from \"prop-types\";\r\nimport { EditorState, convertToRaw, ContentState } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport htmlToDraft from \"html-to-draftjs\";\r\n\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport { message } from \"antd\";\r\n\r\nexport default class RichTextEditor extends Component {\r\n  static propTypes = {\r\n    detail: PropTyeps.string\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const { detail } = this.props;\r\n    if (detail) {\r\n      const contentBlock = htmlToDraft(detail);\r\n      if (contentBlock) {\r\n        const contentState = ContentState.createFromBlockArray(\r\n          contentBlock.contentBlocks\r\n        );\r\n        const editorState = EditorState.createWithContent(contentState);\r\n        this.state = {\r\n          editorState\r\n        };\r\n      }\r\n    } else {\r\n      this.state = {\r\n        editorState: EditorState.createEmpty()\r\n      };\r\n    }\r\n  }\r\n\r\n  onEditorStateChange = editorState => {\r\n    this.setState({\r\n      editorState\r\n    });\r\n  };\r\n\r\n  // 将输入的内容传递给父组件\r\n  getDetail = () => {\r\n    const { editorState } = this.state;\r\n\r\n    return draftToHtml(convertToRaw(editorState.getCurrentContent()));\r\n  };\r\n\r\n  // 图片上传回调函数\r\n  uploadImageCallBack = file => {\r\n    return new Promise((resolve, reject) => {\r\n      const xhr = new XMLHttpRequest();\r\n      xhr.open(\"POST\", \"/manage/img/upload\");\r\n      //xhr.setRequestHeader(\"Authorization\", \"Client-ID XXXXX\");\r\n      const data = new FormData();\r\n      data.append(\"image\", file);\r\n      xhr.send(data);\r\n      xhr.addEventListener(\"load\", () => {\r\n        const response = JSON.parse(xhr.responseText);\r\n        console.log(\"response :\", response);\r\n        if (response.status === 0) {\r\n          message.success(\"上传成功\");\r\n          resolve({ data: { link: response.data.url } });\r\n        } else {\r\n          message.error(\"上传失败\");\r\n          reject(response.data.msg);\r\n        }\r\n      });\r\n      xhr.addEventListener(\"error\", () => {\r\n        const error = JSON.parse(xhr.responseText);\r\n        reject(error);\r\n      });\r\n    });\r\n  };\r\n\r\n  /**\r\n   * uploadCallback事件完成图片上传(图片删除如何实现)\r\n   * editorStyle 实现编辑框的样式修改\r\n   * onEditorStateChange 监听文字输入，并且更新state\r\n   *\r\n   *\r\n   */\r\n  render() {\r\n    const { editorState } = this.state;\r\n    return (\r\n      <Editor\r\n        editorState={editorState}\r\n        wrapperClassName=\"demo-wrapper\"\r\n        editorClassName=\"demo-editor\"\r\n        onEditorStateChange={this.onEditorStateChange}\r\n        editorStyle={{\r\n          minHeight: 200,\r\n          border: \"1px solid black\",\r\n          paddingLeft: 10\r\n        }}\r\n        toolbar={{\r\n          image: {\r\n            uploadCallback: this.uploadImageCallBack,\r\n            alt: { present: true, mandatory: true }\r\n          }\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Card, Input, Button, Icon, Form, message, Cascader } from \"antd\";\r\n\r\nimport PicturesWall from \"./pictures-wall\";\r\nimport RichTextEditor from \"./rich-text-editor\";\r\nimport LinkButton from \"../../components/link-button\";\r\nimport { getCategory, AddOrUpdateProduct } from \"../../api\";\r\nconst { Item } = Form;\r\nconst { TextArea } = Input;\r\n\r\n// 商品的添加和更新\r\nclass ProductAddUpdate extends Component {\r\n  state = {\r\n    options: []\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.pw = React.createRef();\r\n    this.editor = React.createRef();\r\n  }\r\n\r\n  /**\r\n   * 初始化分类级联菜单\r\n   * 如果是修改界面并且product的一级分类(pCategoryId) 不为0\r\n   * 则获取二级分类，并且添加到 对应一级分类的 children 属性中\r\n   * 更新 state 用于默认选中 一级/二级分类\r\n   */\r\n  initOptions = async options => {\r\n    const {\r\n      product: { pCategoryId },\r\n      isUpdate\r\n    } = this;\r\n    // 更新信息界面，判断二级分类 pCategoryId 是否0\r\n    if (isUpdate && pCategoryId !== \"0\") {\r\n      // 获取产品二级分类ID的列表信息\r\n\r\n      const childOptions = await this.getCategory(pCategoryId);\r\n\r\n      // 找出当前商品匹配的一级菜单\r\n      const targetOption = options.find(option => option.value === pCategoryId);\r\n      targetOption.children = childOptions;\r\n    }\r\n    // options 为一个新的对象，此是可以直接赋值\r\n    this.setState({\r\n      options\r\n    });\r\n  };\r\n\r\n  /**\r\n   * 获取分类列表\r\n   */\r\n  getCategory = async (parentId = 0) => {\r\n    // 获取分类列表\r\n    const response = await getCategory(parentId);\r\n    if (response && response.status === 0) {\r\n      const options = response.data.map(({ name, _id }) => ({\r\n        value: _id,\r\n        label: name,\r\n        isLeaf: parentId === 0 ? false : true\r\n      }));\r\n      if (parentId === 0) {\r\n        // 初始化一级分类菜单\r\n        this.initOptions(options);\r\n      } else {\r\n        // 二级列表\r\n        return options;\r\n      }\r\n    } else {\r\n      message.error(\"获取分类列表失败\");\r\n    }\r\n  };\r\n\r\n  //当选择某个选项，加载下一列的监听回调\r\n  loadData = async selectedOptions => {\r\n    const targetOption = selectedOptions[0]; //获得选择的项\r\n    targetOption.loading = true; // 加载动画\r\n\r\n    const option = await this.getCategory(targetOption.value);\r\n    targetOption.loading = false;\r\n    if (option && option.length > 0) {\r\n      targetOption.children = option;\r\n    } else {\r\n      targetOption.isLeaf = true;\r\n    }\r\n    // 如果此时直接使用this.state.options ，而不是用扩展运算符，则option无法进行重写渲染\r\n    this.setState({\r\n      options: [...this.state.options]\r\n    });\r\n  };\r\n\r\n  //提交表单\r\n  submit = () => {\r\n    this.props.form.validateFields(async (error, value) => {\r\n      if (!error) {\r\n        // 获得上传的图片名称数组\r\n        const pw = this.pw.current;\r\n        // 获得输入的富文本内容\r\n        const editor = this.editor.current;\r\n        const { categorys, name, desc, price } = value;\r\n        let categoryId, pCategoryId;\r\n        if (categorys.length === 2) {\r\n          categoryId = categorys[1];\r\n          pCategoryId = categorys[0];\r\n        } else {\r\n          pCategoryId = categorys[0];\r\n        }\r\n        const imgs = pw.getFileList();\r\n        const detail = editor.getDetail();\r\n\r\n        let product = {\r\n          categoryId,\r\n          pCategoryId,\r\n          name,\r\n          desc,\r\n          price,\r\n          imgs,\r\n          detail\r\n        };\r\n        // 判断是更新还是添加\r\n        if (this.isUpdate) {\r\n          product._id = this.product._id;\r\n        }\r\n        const response = await AddOrUpdateProduct(product);\r\n        if (response.status === 0) {\r\n          message.success(`${this.isUpdate ? \"更新\" : \"添加\"}商品成功`);\r\n          this.props.history.goBack();\r\n        } else {\r\n          message.success(`${this.isUpdate ? \"更新\" : \"添加\"}商品失败`);\r\n        }\r\n      } else {\r\n        message.error(\"验证失败\");\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * 商品价格验证，由于已经设置了输入框类型为 Number\r\n   * 无需判断为符合或者字母\r\n   */\r\n  validatePrice = (rule, value, callback) => {\r\n    if (Number.parseInt(value) > 0) {\r\n      callback();\r\n    } else {\r\n      callback(\"商品价格必须大于0\");\r\n    }\r\n  };\r\n  /**\r\n   * 异步初始化数据\r\n   * 获取一级分类列表和二级分类列表\r\n   */\r\n  componentDidMount() {\r\n    this.getCategory();\r\n  }\r\n\r\n  /**\r\n   * 同步初始化\r\n   * 记录商品对象和更新标记\r\n   */\r\n  UNSAFE_componentWillMount() {\r\n    const product = this.props.location.state;\r\n    this.isUpdate = !!product;\r\n    this.product = product || {};\r\n  }\r\n\r\n  render() {\r\n    /**\r\n     * 初始化执行一次渲染\r\n     * 异步获取到分类列表时，执行第二次渲染\r\n     */\r\n    console.log(\"add-update render\");\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { product, isUpdate } = this;\r\n    const {\r\n      pCategoryId,\r\n      categoryId,\r\n      name,\r\n      desc,\r\n      price,\r\n      imgs,\r\n      detail\r\n    } = product;\r\n    const categoryIds = [];\r\n    if (isUpdate) {\r\n      if (pCategoryId !== \"0\") {\r\n        categoryIds.push(pCategoryId);\r\n        categoryIds.push(categoryId);\r\n      } else {\r\n        categoryIds.push(categoryId);\r\n      }\r\n    }\r\n    const title = (\r\n      <span>\r\n        <LinkButton\r\n          onClick={() => {\r\n            this.props.history.goBack();\r\n          }}\r\n        >\r\n          <Icon type=\"arrow-left\" style={{ fontSize: 15 }} />\r\n        </LinkButton>\r\n        <span style={{ fontSize: 15 }}>添加商品</span>\r\n      </span>\r\n    );\r\n\r\n    /**\r\n     * 使用 antd 栅格布局，满格为24\r\n     */\r\n    const formItemLayout = {\r\n      labelCol: { span: 2 },\r\n      wrapperCol: { span: 8 }\r\n    };\r\n\r\n    return (\r\n      <Card title={title}>\r\n        <Form {...formItemLayout}>\r\n          <Item label=\"商品名称:\">\r\n            {getFieldDecorator(\"name\", {\r\n              initialValue: name,\r\n              rules: [{ required: true, message: \"商品名称不能为空\" }]\r\n            })(<Input placeholder=\"请输入商品名称\" />)}\r\n          </Item>\r\n          <Item label=\"商品描述:\">\r\n            {getFieldDecorator(\"desc\", {\r\n              initialValue: desc,\r\n              rules: [{ required: true, message: \"商品描述不能为空\" }]\r\n            })(\r\n              <TextArea\r\n                placeholder=\"请输入商品描述\"\r\n                autosize={{ maxRows: 6, minRows: 2 }}\r\n              />\r\n            )}\r\n          </Item>\r\n          <Item label=\"商品价格:\">\r\n            {getFieldDecorator(\"price\", {\r\n              initialValue: price,\r\n              rules: [\r\n                { required: true, message: \"商品价格不能为空\" },\r\n                { validator: this.validatePrice }\r\n              ]\r\n            })(\r\n              <Input\r\n                placeholder=\"请输入商品价格\"\r\n                type=\"number\"\r\n                addonAfter=\"元\"\r\n              />\r\n            )}\r\n          </Item>\r\n          <Item label=\"商品类别\">\r\n            {getFieldDecorator(\"categorys\", {\r\n              initialValue: categoryIds,\r\n              rules: [{ required: true, message: \"商品类别不能为空\" }]\r\n            })(\r\n              <Cascader\r\n                placeholder=\"请选择商品分类\"\r\n                options={this.state.options} /**显示需要显示的数据数组 */\r\n                loadData={this.loadData}\r\n              />\r\n            )}\r\n          </Item>\r\n          <Item label=\"图片上传\">\r\n            <PicturesWall imgs={imgs} ref={this.pw} />\r\n          </Item>\r\n\r\n          <Item\r\n            label=\"商品详情\"\r\n            labelCol={{ span: 2 }}\r\n            wrapperCol={{ span: 20 }}\r\n          >\r\n            <RichTextEditor detail={detail} ref={this.editor} />\r\n          </Item>\r\n          <Button type=\"primary\" onClick={this.submit}>\r\n            提交\r\n          </Button>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrapProductAddUpdate = Form.create()(ProductAddUpdate);\r\n\r\nexport default WrapProductAddUpdate;\r\n\r\n/**\r\n * 子组件调用父组件方法：父组件将方法以函数的 props 方式传递给子组件调用\r\n * 父组件调用子组件方法，可以通过 ref 获取到子组件的对象，从而获得对象属性\r\n */\r\n","import React, { Component } from \"react\";\r\nimport { Card, Icon, List, Button } from \"antd\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { BASE_IMG_URL } from \"../../config/constantConfig\";\r\nimport { getCategoryInfo } from \"../../api\";\r\nconst Item = List.Item;\r\n\r\n// 商品详情\r\nclass ProductDetail extends Component {\r\n  state = {\r\n    categoryName: \"\",\r\n    subCategoryName: \"\"\r\n  };\r\n\r\n  /**\r\n   * 异步初始化\r\n   * 使用 并发 一起获取分类名称（未处理失败情况）\r\n   * 如果二级分类为空则只获取一个\r\n   */\r\n  async componentDidMount() {\r\n    if (!this.props.location.state) {\r\n      return <Redirect to=\"/product\" />;\r\n    }\r\n    const { categoryId, pCategoryId } = this.props.location.state;\r\n    if (pCategoryId === \"0\") {\r\n      const response = await getCategoryInfo(categoryId);\r\n      const categoryName = response.data.name;\r\n      this.setState({ categoryName });\r\n    } else {\r\n      const responses = await Promise.all([\r\n        getCategoryInfo(categoryId),\r\n        getCategoryInfo(pCategoryId)\r\n      ]);\r\n\r\n      const categoryName = responses[0].data.name;\r\n      const subCategoryName = responses[1].data.name;\r\n\r\n      this.setState({\r\n        categoryName,\r\n        subCategoryName\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.location.state) {\r\n      return <Redirect to=\"/product\" />;\r\n    }\r\n    const { name, desc, detail, imgs, price } = this.props.location.state;\r\n\r\n    const { categoryName, subCategoryName } = this.state;\r\n\r\n    const title = (\r\n      <span>\r\n        <Button type=\"primary\" onClick={() => this.props.history.goBack()}>\r\n          <Icon type=\"arrow-left\" />\r\n          后退\r\n        </Button>\r\n      </span>\r\n    );\r\n    return (\r\n      <Card title={title} className=\"product-detail\">\r\n        <List>\r\n          <Item>\r\n            <span className=\"title\">商品名称:</span>\r\n            <span>{name}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"title\">商品描述:</span>\r\n            <span>{desc}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"title\">商品价格:</span>\r\n            <span>{price}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"title\">所属分类:</span>\r\n            <span>\r\n              {categoryName} {subCategoryName ? \"-->\" + subCategoryName : \"\"}\r\n            </span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"title\">所属图片:</span>\r\n            {imgs.map((item, index) => (\r\n              <img key={index} src={`${BASE_IMG_URL}${item}`} alt=\"1\" />\r\n            ))}\r\n          </Item>\r\n          <Item>\r\n            <span className=\"title\">所属分类:</span>\r\n            <div\r\n              dangerouslySetInnerHTML={{\r\n                __html: detail\r\n              }}\r\n            />\r\n          </Item>\r\n        </List>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductDetail;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Select, Table, Input, Button, Icon, message } from \"antd\";\r\n\r\nimport { delProduct } from \"../../api\";\r\nimport LinkButton from \"../../components/link-button\";\r\nimport {\r\n  getProductList,\r\n  searchProductList,\r\n  updateProductStatus\r\n} from \"../../api\";\r\nimport { PAGE_SIZE } from \"../../config/constantConfig\";\r\n\r\nconst Option = Select.Option;\r\nclass ProductHome extends Component {\r\n  state = {\r\n    loading: true,\r\n    total: 0,\r\n    products: [],\r\n    searchType: \"productDesc\",\r\n    searchValue: \"\"\r\n  };\r\n\r\n  // 更新商品状态\r\n  updateProductStatus = async product => {\r\n    const response = await updateProductStatus(\r\n      product._id,\r\n      product.status === 1 ? 0 : 1\r\n    );\r\n    if (response && response.status === 0) {\r\n      message.success(\"更新成功\");\r\n      this.getProducts(this.pageNum);\r\n    } else {\r\n      message.error(\"更新失败\");\r\n    }\r\n  };\r\n\r\n  // 初始化表单标题\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: \"商品名称\",\r\n        dataIndex: \"name\"\r\n      },\r\n      {\r\n        title: \"商品描述\",\r\n        dataIndex: \"desc\"\r\n      },\r\n      {\r\n        title: \"价格\",\r\n        dataIndex: \"price\",\r\n        render: price => `¥${price}`\r\n      },\r\n      {\r\n        title: \"状态\",\r\n        width: 100,\r\n        //dataIndex: \"status\",  如歌值为状态则无法获得商品ID\r\n        render: product => {\r\n          return (\r\n            <span>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => {\r\n                  this.updateProductStatus(product);\r\n                }}\r\n              >\r\n                {product.status === 1 ? \"下架\" : \"上架\"}\r\n              </Button>\r\n              <span>{product.status === 1 ? \"在售\" : \"已下架\"}</span>\r\n            </span>\r\n          );\r\n        }\r\n      },\r\n      {\r\n        width: 100,\r\n        title: \"操作\",\r\n        render: product => {\r\n          return (\r\n            <div>\r\n              <LinkButton\r\n                onClick={() =>\r\n                  this.props.history.push(\"/product/detail\", product)\r\n                }\r\n              >\r\n                详情\r\n              </LinkButton>\r\n              <LinkButton\r\n                onClick={() =>\r\n                  /**\r\n                   * 此语法只支持browerRouter\r\n                   * 通过传入第二个参数，将 product 对象传递到子组件\r\n                   */\r\n                  this.props.history.push(\"/product/update\", product)\r\n                }\r\n              >\r\n                修改\r\n              </LinkButton>\r\n\r\n              <LinkButton onClick={() => this.delProduct(product._id)}>\r\n                删除\r\n              </LinkButton>\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n    ];\r\n  };\r\n\r\n  // 删除商品\r\n  delProduct = async _id => {\r\n    const response = await delProduct(_id);\r\n    if (response.status === 0) {\r\n      message.success(\"删除成功\");\r\n      this.getProducts(1);\r\n    } else {\r\n      message.error(\"删除失败\");\r\n    }\r\n  };\r\n\r\n  // 根据 pageNum(当前页码)) 和 pageSize(一页显示的数量) 获取表单列表\r\n  getProducts = async current => {\r\n    this.setState({\r\n      loading: true\r\n    });\r\n    // 更新显示的页码\r\n    this.pageNum = current;\r\n    const { searchType, searchValue } = this.state;\r\n    let response;\r\n    // 判读是否需要根据输入的关键字进行过滤\r\n    if (searchValue.length > 0) {\r\n      response = await searchProductList(\r\n        this.pageNum,\r\n        PAGE_SIZE,\r\n        searchValue,\r\n        searchType\r\n      );\r\n    } else {\r\n      response = await getProductList(this.pageNum, PAGE_SIZE);\r\n    }\r\n\r\n    if (response && response.status === 0) {\r\n      const { list, total } = response.data;\r\n      this.setState({\r\n        loading: false,\r\n        products: list,\r\n        total\r\n      });\r\n    } else {\r\n      message.error(\"获取商品列表失败\");\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 执行异步初始化\r\n   * 初始化获得 商品列表 时候，需要传入当前页码，不然将为undefind\r\n   */\r\n  componentDidMount() {\r\n    this.getProducts(1);\r\n  }\r\n\r\n  //执行同步初始化\r\n  UNSAFE_componentWillMount() {\r\n    this.initColumns();\r\n  }\r\n\r\n  /**\r\n   * 保持 this.pageNum 的目的是为了在进行查询的时候，可以获取当前页码\r\n   * 使用 受控组件(值由react进行管理) 获取select和input的值，并且使用this,setState进行管理更新(是有必要更新到state中？因为每次更新都将刷新页面，而实际这两个值的修改界面并没有更改)\r\n   */\r\n  render() {\r\n    const { total, products, loading, searchType } = this.state;\r\n    const title = (\r\n      <div>\r\n        <Select\r\n          defaultValue={searchType}\r\n          style={{ width: 150 }}\r\n          onChange={value => {\r\n            this.setState({\r\n              searchType: value\r\n            });\r\n          }}\r\n        >\r\n          <Option value=\"productDesc\">按照描述搜索</Option>\r\n          <Option value=\"productName\">按照名称搜索</Option>\r\n        </Select>\r\n        <Input\r\n          style={{ width: 150, margin: 10 }}\r\n          placeholder=\"查询内容\"\r\n          onChange={({ target: { value } }) =>\r\n            this.setState({\r\n              searchValue: value.trim()\r\n            })\r\n          }\r\n        />\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => {\r\n            this.getProducts(1);\r\n          }}\r\n        >\r\n          查询\r\n        </Button>\r\n      </div>\r\n    );\r\n    const extra = (\r\n      <Button\r\n        type=\"primary\"\r\n        onClick={() => this.props.history.push(\"/product/add\")}\r\n      >\r\n        <Icon type=\"plus\" />\r\n        添加\r\n      </Button>\r\n    );\r\n\r\n    return (\r\n      <Card title={title} extra={extra}>\r\n        <Table\r\n          loading={loading}\r\n          bordered={true}\r\n          rowKey=\"_id\"\r\n          dataSource={products}\r\n          columns={this.columns}\r\n          pagination={{\r\n            current: this.pageNum,\r\n            defaultPageSize: PAGE_SIZE,\r\n            total,\r\n            onChange: this.getProducts,\r\n            showQuickJumper: true\r\n          }}\r\n        />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductHome;\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport ProductAddUpdate from \"./add-update\";\r\nimport ProductDetail from \"./detail\";\r\nimport ProductHome from \"./home\";\r\nimport \"./product.less\";\r\nclass Product extends Component {\r\n  state = {};\r\n\r\n  /**\r\n   * Switch 默认为模糊匹配，路径输入 /product/add ，则优先匹配/product\r\n   * 需要添加精准匹配属性\r\n   */\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/product\" component={ProductHome} exact={true} />\r\n        <Route path=\"/product/add\" component={ProductAddUpdate} />\r\n        <Route path=\"/product/update\" component={ProductAddUpdate} />\r\n        <Route path=\"/product/detail\" component={ProductDetail} />\r\n        <Redirect to=\"/product\" />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Product;\r\n","export function formateDate(time) {\r\n  if (!time) return \"\";\r\n  let date = new Date(time);\r\n  return (\r\n    date.getFullYear() +\r\n    \"-\" +\r\n    (date.getMonth() + 1) +\r\n    \"-\" +\r\n    date.getDate() +\r\n    \" \" +\r\n    date.getHours() +\r\n    \":\" +\r\n    date.getMinutes() +\r\n    \":\" +\r\n    date.getSeconds()\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form, Input } from \"antd\";\r\n\r\nconst { Item } = Form;\r\n\r\n/**\r\n * 添加角色组件\r\n * 这里不使用 PureComponent 来优化渲染是因为\r\n * 在父组件执行关闭的时候，清空了 form 组件的输入内容，从而使内部管理的数据进行了变化，所以需要重新渲染\r\n */\r\n\r\nclass AddForm extends Component {\r\n  static propTypes = {\r\n    setForm: PropTypes.func.isRequired\r\n  };\r\n  state = {};\r\n\r\n  UNSAFE_componentWillMount() {\r\n    this.props.setForm(this.props.form);\r\n  }\r\n\r\n  render() {\r\n    console.log(\"add-form render()\");\r\n    const {\r\n      form: { getFieldDecorator }\r\n    } = this.props;\r\n    return (\r\n      <Form labelCol={{ span: 4 }} wrapperCol={{ span: 10 }}>\r\n        <Item label=\"角色名称:\">\r\n          {getFieldDecorator(\"name\", {\r\n            rules: [{ required: true, message: \"用户名称必须输入\" }]\r\n          })(<Input placeholder=\"请输入角色名称\" />)}\r\n        </Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrapAddForm = Form.create()(AddForm);\r\n\r\nexport default WrapAddForm;\r\n","const menuList = [\r\n  {\r\n    title: \"首页\", // 菜单标题名称\r\n    key: \"/home\", // 对应的path\r\n    icon: \"home\", // 图标名称\r\n    isPublic: true // 公开的\r\n  },\r\n  {\r\n    title: \"商品\",\r\n    key: \"/products\",\r\n    icon: \"appstore\",\r\n    children: [\r\n      // 子菜单列表\r\n      {\r\n        title: \"品类管理\",\r\n        key: \"/category\",\r\n        icon: \"bars\"\r\n      },\r\n      {\r\n        title: \"商品管理\",\r\n        key: \"/product\",\r\n        icon: \"tool\"\r\n      }\r\n    ]\r\n  },\r\n\r\n  {\r\n    title: \"用户管理\",\r\n    key: \"/user\",\r\n    icon: \"user\"\r\n  },\r\n  {\r\n    title: \"角色管理\",\r\n    key: \"/role\",\r\n    icon: \"safety\"\r\n  },\r\n\r\n  {\r\n    title: \"图形图表\",\r\n    key: \"/charts\",\r\n    icon: \"area-chart\",\r\n    children: [\r\n      {\r\n        title: \"柱形图\",\r\n        key: \"/charts/bar\",\r\n        icon: \"bar-chart\"\r\n      },\r\n      {\r\n        title: \"折线图\",\r\n        key: \"/charts/line\",\r\n        icon: \"line-chart\"\r\n      },\r\n      {\r\n        title: \"饼图\",\r\n        key: \"/charts/pie\",\r\n        icon: \"pie-chart\"\r\n      }\r\n    ]\r\n  },\r\n\r\n  {\r\n    title: \"订单管理\",\r\n    key: \"/order\",\r\n    icon: \"windows\"\r\n  }\r\n];\r\n\r\nexport default menuList;\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Tree, Form, Input } from \"antd\";\r\n\r\nimport menuList from \"../../config/memuConfig\";\r\nconst { TreeNode } = Tree;\r\nconst { Item } = Form;\r\n\r\n/**\r\n * 更新权限组件\r\n * 使用 PureComponent\r\n * 避免 由于父组件执行 render ，即使子组件没有state/props的更新也需要进行render 的bug\r\n * 优化渲染性能\r\n */\r\nclass AuthForm extends PureComponent {\r\n  static propTypes = {\r\n    role: PropTypes.object.isRequired\r\n  };\r\n\r\n  /**\r\n   *\r\n   * 初始化显示 checkedKeys\r\n   * 由于父组件关闭modal只是 设置了 disable，组件并未死亡，所以 checkedKeys 将不会进行改变\r\n   * 但是 父组件每次显示 modal ，都会传递一个新的props属性\r\n   * 所以需要结合componentWillReciveProps 进行更新 state 状态\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n    const { menus } = this.props.role;\r\n    this.state = {\r\n      checkedKeys: menus\r\n    };\r\n  }\r\n\r\n  // 为父组件提供最新 menus 的方法\r\n  getMenus = () => this.state.checkedKeys;\r\n\r\n  onCheck = (checkedKeys, info) => {\r\n    this.setState({ checkedKeys });\r\n  };\r\n\r\n  getTreeNodes = menuList => {\r\n    return menuList.reduce((pre, item) => {\r\n      pre.push(\r\n        <TreeNode title={item.title} key={item.key}>\r\n          {item.children ? this.getTreeNodes(item.children) : null}\r\n        </TreeNode>\r\n      );\r\n      return pre;\r\n    }, []);\r\n  };\r\n  // 初始化同步数据\r\n  UNSAFE_componentWillMount() {\r\n    this.treeNodes = this.getTreeNodes(menuList);\r\n  }\r\n\r\n  /**\r\n   * 接收父组件传递的属性，只会在更新的时候调用，初始化需要放到 构造函数中\r\n   * 在此事件中进行 setState ，并不会运行2次render\r\n   * 主要用于以下情况\r\n   * 1. 在组件没有消亡的时候需要进行更新props属性\r\n   */\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    const { menus } = nextProps.role;\r\n    this.setState({ checkedKeys: menus });\r\n  }\r\n\r\n  /**\r\n   * checkable 是否可以选中\r\n   * defaultExpandAll 全部展开\r\n   * checkedKeys={role.menus} 直接赋值将导致按钮无法再次被选中\r\n   *\r\n   */\r\n  render() {\r\n    console.log(\"auth-form render()\");\r\n    const { role } = this.props;\r\n    const formItemLayout = {\r\n      labelCol: { span: 4 }, // 左侧label的宽度\r\n      wrapperCol: { span: 15 } // 右侧包裹的宽度\r\n    };\r\n    return (\r\n      <div>\r\n        <Item label=\"用户名称\" {...formItemLayout}>\r\n          <Input value={role.name} disabled />\r\n        </Item>\r\n        <Tree\r\n          defaultExpandAll={true}\r\n          checkable\r\n          checkedKeys={this.state.checkedKeys}\r\n          onSelect={this.onSelect}\r\n          onCheck={this.onCheck}\r\n        >\r\n          <TreeNode title=\"平台权限\" key=\"all\">\r\n            {this.treeNodes}\r\n          </TreeNode>\r\n        </Tree>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AuthForm;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Button, Table, Modal, message } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { PAGE_SIZE } from \"../../config/constantConfig\";\r\nimport { getRoleList, addRole, updateRole } from \"../../api\";\r\nimport { formateDate } from \"../../utils/dateUtils\";\r\nimport { resetUser } from \"../../redux/actions\";\r\nimport AddForm from \"./add-form\";\r\nimport AuthForm from \"./auth-form\";\r\nclass Role extends Component {\r\n  state = {\r\n    roles: [], // 数据源\r\n    role: {}, // 选择中的用户\r\n    modalVisible: 0 // 0关闭,1显示添加角色 2 显示授权\r\n  };\r\n\r\n  /**\r\n   * 可以使用 React.createRef(); 获得子组件对象\r\n   * 但是无法使用这个方法获得 二次包装 的组件对象\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n    this.authForm = React.createRef();\r\n  }\r\n\r\n  // 表格行选中事件\r\n  onRow = role => {\r\n    return {\r\n      onClick: event => {\r\n        this.setState({\r\n          role\r\n        });\r\n      }\r\n    };\r\n  };\r\n\r\n  // 异步获得 角色列表\r\n  getRoleList = async () => {\r\n    const response = await getRoleList();\r\n    if (response && response.status === 0) {\r\n      const roles = response.data;\r\n      this.setState({\r\n        roles\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 无法使用 refs 获得 addForm 对象\r\n   * 使用 子组件调用父组件方法,传递 函数 给 子组件的props 对象\r\n   * 从而在子组件中进行调用设置form 对象\r\n   */\r\n  setForm = form => {\r\n    this.form = form;\r\n  };\r\n\r\n  // 添加角色\r\n  addRole = () => {\r\n    this.form.validateFields(async (error, value) => {\r\n      if (!error) {\r\n        const { name } = value;\r\n        const response = await addRole(name);\r\n        if (response && response.status === 0) {\r\n          message.success(\"添加成功\");\r\n          // 不发送请求，直接更新缓存数据 this.getRoleList();\r\n          /**\r\n           * 不建议直接修改state 属性\r\n           *  const { roles } = this.state;\r\n           * roles.push(response.data);\r\n           */\r\n\r\n          /**\r\n           * 更新的数据如果于原数据没有关系，则使用 this.setstate({roles})\r\n           * 更新的数据如果基于原数据进行操作，则使用函数更新方法，如下\r\n           */\r\n          this.setState(state => ({ roles: [...state.roles, response.data] }));\r\n\r\n          this.form.resetFields(); //清空表单输入\r\n        } else {\r\n          message.success(\"添加失败\");\r\n        }\r\n        this.onCancel();\r\n      } else {\r\n        message.error(\"验证失败\");\r\n      }\r\n    });\r\n  };\r\n\r\n  // 授权角色\r\n  authRole = async () => {\r\n    const { user } = this.props;\r\n    const { _id } = this.state.role;\r\n    const authForm = this.authForm.current;\r\n    const role = this.state.role;\r\n    const param = {\r\n      menus: authForm.getMenus(),\r\n      _id,\r\n      auth_name: user.username,\r\n      auth_time: Date.now()\r\n    };\r\n\r\n    Object.assign(role, param);\r\n\r\n    const response = await updateRole(role);\r\n\r\n    if (response && response.status === 0) {\r\n      if (role._id === user.role_id) {\r\n        // 如果修改的权限是用户当前的权限需要重新登陆，刷新菜单栏\r\n        message.success(\"当前用户角色权限成功,请重新登陆\");\r\n        this.props.resetUser();\r\n      } else {\r\n        message.success(\"更新角色权限成功\");\r\n        this.setState({\r\n          roles: [...this.state.roles]\r\n        });\r\n        // 需要更新 roles 列表\r\n        this.onCancel();\r\n      }\r\n    } else {\r\n      message.error(\"更新角色权限失败\");\r\n    }\r\n  };\r\n\r\n  onCancel = () => {\r\n    if (this.form) {\r\n      this.form.resetFields();\r\n    }\r\n\r\n    this.setState({\r\n      modalVisible: 0\r\n    });\r\n  };\r\n\r\n  // 初始化异步数据\r\n  componentDidMount() {\r\n    this.getRoleList();\r\n  }\r\n\r\n  // 初始化同步数据\r\n  UNSAFE_componentWillMount() {\r\n    this.columns = [\r\n      {\r\n        title: \"角色名称\",\r\n        dataIndex: \"name\"\r\n      },\r\n      {\r\n        title: \"创建时间\",\r\n        dataIndex: \"create_time\",\r\n        render: formateDate // 简化写法，如果传入参数和函数使用的参数一致，则可以优化写法\r\n      },\r\n      {\r\n        title: \"授权时间\",\r\n        dataIndex: \"auth_time\",\r\n        render: formateDate\r\n      },\r\n      {\r\n        title: \"授权人\",\r\n        dataIndex: \"auth_name\"\r\n      }\r\n    ];\r\n  }\r\n\r\n  render() {\r\n    const { role, roles } = this.state;\r\n    const title = (\r\n      <div>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => {\r\n            this.setState({ modalVisible: 1 });\r\n          }}\r\n        >\r\n          创建角色\r\n        </Button>\r\n        <Button\r\n          type=\"primary\"\r\n          disabled={!role._id}\r\n          style={{ marginLeft: 10 }}\r\n          onClick={() => {\r\n            this.setState({ modalVisible: 2 });\r\n          }}\r\n        >\r\n          创建角色权限\r\n        </Button>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <Card title={title}>\r\n        <Modal\r\n          title=\"添加角色\"\r\n          visible={this.state.modalVisible === 1}\r\n          onOk={this.addRole}\r\n          onCancel={this.onCancel}\r\n          okText=\"确认\"\r\n          cancelText=\"取消\"\r\n        >\r\n          <AddForm setForm={this.setForm} />\r\n        </Modal>\r\n\r\n        <Modal\r\n          title=\"设置角色权限\"\r\n          visible={this.state.modalVisible === 2}\r\n          onOk={this.authRole}\r\n          onCancel={this.onCancel}\r\n          okText=\"确认\"\r\n          cancelText=\"取消\"\r\n        >\r\n          <AuthForm role={role} ref={this.authForm} />\r\n        </Modal>\r\n        <Table\r\n          pagination={{ pageSize: PAGE_SIZE }}\r\n          dataSource={roles}\r\n          rowKey=\"_id\"\r\n          columns={this.columns}\r\n          bordered={true}\r\n          rowSelection={{\r\n            type: \"radio\",\r\n            selectedRowKeys: [role._id],\r\n            onSelect: record =>\r\n              this.setState({\r\n                role: record\r\n              })\r\n          }}\r\n          onRow={this.onRow}\r\n        />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({ user: state.user }),\r\n  { resetUser }\r\n)(Role);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form, Input, Select } from \"antd\";\r\n\r\nconst { Item } = Form;\r\nconst { Option } = Select;\r\n\r\nclass UserForm extends Component {\r\n  static propTypes = {\r\n    user: PropTypes.object,\r\n    roles: PropTypes.array.isRequired,\r\n    setForm: PropTypes.func.isRequired\r\n  };\r\n\r\n  UNSAFE_componentWillMount() {\r\n    this.props.setForm(this.props.form);\r\n  }\r\n\r\n  state = {};\r\n  render() {\r\n    const { roles, user } = this.props;\r\n    const { getFieldDecorator } = this.props.form;\r\n    const fromStyle = {\r\n      labelCol: { span: 4 },\r\n      wrapperCol: { span: 15 }\r\n    };\r\n\r\n    return (\r\n      <Form>\r\n        <Item label=\"用户名:\" {...fromStyle}>\r\n          {getFieldDecorator(\"username\", {\r\n            initialValue: user.username,\r\n            rules: [\r\n              { required: true, message: \"用户名称必须驶入\" },\r\n              { min: 4, message: \"用户名不能小于4位数\" },\r\n              { max: 12, message: \"用户名不能大于12位数\" }\r\n            ]\r\n          })(<Input placeholder=\"请输入用户名称\" />)}\r\n        </Item>\r\n        {user._id ? null : (\r\n          <Item label=\"密码:\" {...fromStyle}>\r\n            {getFieldDecorator(\"password\", {\r\n              initialValue: user.password,\r\n              rules: [\r\n                { required: true, message: \"密码必须输入\" },\r\n                { min: 4, message: \"用户名不能小于4位数\" },\r\n                { max: 12, message: \"用户名不能大于12位数\" }\r\n              ]\r\n            })(<Input type=\"password\" placeholder=\"请输入密码\" />)}\r\n          </Item>\r\n        )}\r\n        <Item label=\"手机号:\" {...fromStyle}>\r\n          {getFieldDecorator(\"phone\", { initialValue: user.phone })(\r\n            <Input placeholder=\"请输入手机号码\" />\r\n          )}\r\n        </Item>\r\n        <Item label=\"邮箱:\" {...fromStyle}>\r\n          {getFieldDecorator(\"email\", { initialValue: user.email })(\r\n            <Input placeholder=\"请输入邮箱地址\" />\r\n          )}\r\n        </Item>\r\n        <Item label=\"角色:\" {...fromStyle} defaultValue={roles[0]._id}>\r\n          {getFieldDecorator(\"role_id\", { initialValue: user.role_id })(\r\n            <Select>\r\n              {roles.map(role => (\r\n                <Option key={role._id} value={role._id}>\r\n                  {role.name}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          )}\r\n        </Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrapAddForm = Form.create()(UserForm);\r\nexport default WrapAddForm;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Button, message, Modal, Popconfirm } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { resetUser } from \"../../redux/actions\";\r\nimport { PAGE_SIZE } from \"../../config/constantConfig\";\r\nimport { getUserList, addOrUpdateUser, deleteUser } from \"../../api\";\r\nimport LinkButton from \"../../components/link-button\";\r\nimport { formateDate } from \"../../utils/dateUtils\";\r\nimport UserForm from \"./user-form\";\r\nclass User extends Component {\r\n  state = {\r\n    user: {}, //用来判断是添加还是修改\r\n    loading: true,\r\n    roles: [],\r\n    users: [], // 用户列表\r\n    visible: false //0关闭显示，1显示添加，2显示修改\r\n  };\r\n\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: \"用户名\",\r\n        dataIndex: \"username\"\r\n      },\r\n      {\r\n        title: \"邮箱\",\r\n        dataIndex: \"email\"\r\n      },\r\n      {\r\n        title: \"电话\",\r\n        dataIndex: \"phone\"\r\n      },\r\n      {\r\n        title: \"注册时间\",\r\n        dataIndex: \"create_time\",\r\n        render: formateDate\r\n      },\r\n      {\r\n        title: \"所属角色\",\r\n        dataIndex: \"role_id\",\r\n        render: role_id => this.roleNames.get(role_id)\r\n      },\r\n      {\r\n        title: \"操作\",\r\n        render: user => {\r\n          return (\r\n            <div>\r\n              <LinkButton onClick={() => this.showModal(user)}>修改</LinkButton>\r\n              <Popconfirm\r\n                title=\"确认删除这个用户吗?\"\r\n                onConfirm={() => this.delUser(user._id)}\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n              >\r\n                <LinkButton>删除</LinkButton>\r\n              </Popconfirm>\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n    ];\r\n  };\r\n\r\n  initRoleNames = roles => {\r\n    const roleNames = roles.reduce((pre, role) => {\r\n      pre.set(role._id, role.name);\r\n      return pre;\r\n    }, new Map());\r\n    this.roleNames = roleNames;\r\n  };\r\n\r\n  getUserList = async () => {\r\n    const response = await getUserList();\r\n    console.log(\"getUserList :\", response);\r\n    if (response && response.status === 0) {\r\n      const { users, roles } = response.data;\r\n      this.initRoleNames(roles);\r\n      this.setState({ users, roles, loading: false });\r\n    } else {\r\n      message.error(\"获取用户列表失败\");\r\n    }\r\n  };\r\n\r\n  showModal = user => {\r\n    this.setState({\r\n      user,\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  submint = () => {\r\n    this.form.validateFields(async (error, value) => {\r\n      if (!error) {\r\n        const { username, password, phone, email, role_id } = value;\r\n        const user = {\r\n          username,\r\n          password,\r\n          phone,\r\n          email,\r\n          role_id\r\n        };\r\n        //判断是添加还是修改\r\n        if (this.state.user) {\r\n          user._id = this.state.user._id;\r\n        }\r\n        const response = await addOrUpdateUser(user);\r\n        if (response && response.status === 0) {\r\n          if (this.props.user.username === username) {\r\n            message.success(`更新角色是当前用户角色，请重新登陆`);\r\n            this.props.resetUser();\r\n          } else {\r\n            message.success(`${user._id ? \"更新\" : \"添加\"}成功`);\r\n          }\r\n          // 如果修改的是当前用户的角色，需要重新登陆，刷新菜单栏\r\n        } else {\r\n          message.error(`${user._id ? \"更新\" : \"添加\"}失败`);\r\n        }\r\n\r\n        this.getUserList();\r\n        this.form.resetFields();\r\n        this.setState({\r\n          visible: false\r\n        });\r\n      } else {\r\n        message.error(\"验证失败\");\r\n      }\r\n    });\r\n  };\r\n\r\n  // 删除用户\r\n  delUser = async userId => {\r\n    const response = await deleteUser(userId);\r\n    if (response && response.status === 0) {\r\n      message.success(\"删除成功\");\r\n      this.setState({\r\n        loading: true\r\n      });\r\n      this.getUserList();\r\n    } else {\r\n      message.error(\"删除失败\");\r\n    }\r\n  };\r\n\r\n  //加载异步初始化数据\r\n  componentDidMount() {\r\n    this.getUserList();\r\n  }\r\n\r\n  UNSAFE_componentWillMount() {\r\n    this.initColumns();\r\n  }\r\n\r\n  render() {\r\n    console.log(\"user render()\");\r\n    const { loading, users, visible, roles, user } = this.state;\r\n    const title = (\r\n      <Button type=\"primary\" onClick={this.showModal}>\r\n        创建用户\r\n      </Button>\r\n    );\r\n\r\n    return (\r\n      <Card title={title}>\r\n        <Modal\r\n          title={!user._id ? \"创建用户\" : \"修改用户\"}\r\n          visible={visible}\r\n          onOk={this.submint}\r\n          onCancel={() => {\r\n            this.setState({\r\n              visible: false\r\n            });\r\n          }}\r\n          okText=\"确认\"\r\n          cancelText=\"取消\"\r\n        >\r\n          <UserForm\r\n            user={user}\r\n            roles={roles}\r\n            setForm={form => (this.form = form)}\r\n          />\r\n        </Modal>\r\n        <Table\r\n          loading={loading}\r\n          bordered={true}\r\n          rowKey=\"_id\"\r\n          columns={this.columns}\r\n          dataSource={users}\r\n          pagination={{\r\n            defaultPageSize: PAGE_SIZE,\r\n            showQuickJumper: true\r\n          }}\r\n        />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({ user: state.user }),\r\n  { resetUser }\r\n)(User);\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Button } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setHeadTitle } from \"../../redux/actions\";\r\nimport \"./not-found.less\";\r\nclass NotFound extends Component {\r\n  state = {};\r\n\r\n  clickHandle = () => {\r\n    this.props.setHeadTitle(\"首页\");\r\n    this.props.history.replace(\"/home\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Row className=\"not-found\">\r\n        <Col span={12} className=\"left\"></Col>\r\n        <Col span={12} className=\"right\">\r\n          <h1>404</h1>\r\n          <h2>抱歉,你访问的页面不存在</h2>\r\n          <Button type=\"primary\" onClick={this.clickHandle}>\r\n            回到首页\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { setHeadTitle }\r\n)(NotFound);\r\n","import React, { Component } from \"react\";\r\nimport { Menu, Icon } from \"antd\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./index.less\";\r\nimport { setHeadTitle } from \"../../redux/actions\";\r\nimport logo from \"../../assets/images/logo.png\";\r\nimport menuList from \"../../config/memuConfig\";\r\nconst { SubMenu } = Menu;\r\nclass LeftNav extends Component {\r\n  state = {};\r\n\r\n  /*\r\n  判断当前登陆用户对item是否有权限\r\n   */\r\n  hasAuth = item => {\r\n    // 获取当前用户的\r\n    const {\r\n      username,\r\n      role: { menus }\r\n    } = this.props.user;\r\n    /**\r\n     * admin 用户显示所有\r\n     * isPublic 为公用菜单，向所有人开放\r\n     * 用户权限数组中不存在不显示\r\n     */\r\n    if (\r\n      username === \"admin\" ||\r\n      item.isPublic ||\r\n      menus.indexOf(item.key) !== -1\r\n    ) {\r\n      return true;\r\n    } else if (item.children) {\r\n      // 如果当前用户有此item的某个子item的权限\r\n      return !!item.children.find(item => menus.indexOf(item.key) !== -1);\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 采用 array reduce遍历方法，实现累计往 pre 数组中添加新下内容\r\n   * 在遍历的过程中，判断二级菜单栏的 key 是否与当前路径相同\r\n   * 如果一致则记录一级菜单栏的 key\r\n   */\r\n  getMenuNodes = menuList => {\r\n    const { pathname } = this.props.location;\r\n    return menuList.reduce((pre, item) => {\r\n      // 判断当前用户是否有这个权限使用菜单\r\n      if (this.hasAuth(item)) {\r\n        const { title, key, icon, children } = item;\r\n        if (children) {\r\n          const citem = children.find(\r\n            citem => pathname.indexOf(citem.key) !== -1\r\n          );\r\n          if (citem) {\r\n            this.openKey = item.key;\r\n          }\r\n\r\n          pre.push(\r\n            <SubMenu\r\n              key={key}\r\n              title={\r\n                <span>\r\n                  <Icon type={icon} />\r\n                  <span>{title}</span>\r\n                </span>\r\n              }\r\n            >\r\n              {this.getMenuNodes(children)}\r\n            </SubMenu>\r\n          );\r\n        } else {\r\n          if (pathname === item.key || pathname.indexOf(item.key) !== -1) {\r\n            this.props.setHeadTitle(item.title);\r\n          }\r\n          pre.push(\r\n            <Menu.Item key={key}>\r\n              <Link\r\n                to={key}\r\n                onClick={() => this.props.setHeadTitle(item.title)}\r\n              >\r\n                <Icon type={icon} />\r\n                <span>{title}</span>\r\n              </Link>\r\n            </Menu.Item>\r\n          );\r\n        }\r\n      }\r\n      return pre;\r\n    }, []);\r\n  };\r\n\r\n  /**\r\n   * 在执行 render 之前，准备好菜单栏数据，用于初始化渲染\r\n   * 一般用于初始化同步数据\r\n   * componentDidMount 则用于初始化异步数据，包含：ajax请求，关闭计时器等\r\n   */\r\n  UNSAFE_componentWillMount() {\r\n    this.menuNodes = this.getMenuNodes(menuList);\r\n  }\r\n  /**\r\n   * 通过 getMenuNodes 递归添加子项\r\n   * 通过 selectedKeys 设置选择的栏目\r\n   * defaultOpenKeys 设置打开的二级菜单栏，值为一级菜单栏\r\n   */\r\n  render() {\r\n    let { pathname } = this.props.location;\r\n    const openKey = this.openKey;\r\n    if (pathname.indexOf(\"/product\") === 0) {\r\n      pathname = \"/product\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"left-nav\">\r\n        <Link to=\"/\" className=\"left-nav-header\">\r\n          <img src={logo} alt=\"logo\"></img>\r\n          <h1>React 后台</h1>\r\n        </Link>\r\n        <Menu\r\n          theme=\"dark\"\r\n          mode=\"inline\"\r\n          selectedKeys={[pathname]}\r\n          defaultOpenKeys={[openKey]}\r\n        >\r\n          {this.menuNodes}\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * withRouter 高阶组件\r\n * 包装非路由组件，传递 history/location/mathc属性\r\n *\r\n * 非路由组件:不是用过 router 跳转的组件\r\n *\r\n * connect 高阶组件\r\n * 将state 一般属性传递给 UI组件的props属性\r\n * 将state 函数属性传递给UI组件的props属性\r\n */\r\n\r\nexport default connect(\r\n  state => ({ user: state.user }),\r\n  { setHeadTitle }\r\n)(withRouter(LeftNav));\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Modal } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport LinkButton from \"../link-button\";\r\nimport menuList from \"../../config/memuConfig\";\r\nimport { getWeather } from \"../../api\";\r\nimport { formateDate } from \"../../utils/dateUtils\";\r\nimport { resetUser } from \"../../redux/actions\";\r\nimport \"./index.less\";\r\n\r\nconst { confirm } = Modal;\r\nclass Header extends Component {\r\n  state = {\r\n    dayPictureUrl: \"\",\r\n    weather: \"\",\r\n    currentDate: \"\"\r\n  };\r\n\r\n  /**\r\n   * componentWillMount 在生命周期内只会执行一次\r\n   * 所以在这里获取 title 将无法更新\r\n   */\r\n  /* UNSAFE_componentWillMount() {\r\n    this.getTitle();\r\n  } */\r\n\r\n  /**\r\n   * 在componentDidMount 周期执行异步初始化数据操作\r\n   * 异步操作一般为:网络通讯，文件操作，定时器\r\n   */\r\n  async componentDidMount() {\r\n    const { dayPictureUrl, weather } = await getWeather(\"杭州\");\r\n    this.getTime();\r\n    this.setState({\r\n      dayPictureUrl,\r\n      weather\r\n    });\r\n  }\r\n\r\n  // 在组件即将要被取消挂载的时候，删除定时器。否则将会造成内存溢出\r\n  componentWillUnmount() {\r\n    clearInterval(this.dateTimer);\r\n  }\r\n\r\n  // 动态更新时间\r\n  getTime() {\r\n    this.dateTimer = setInterval(() => {\r\n      const currentDate = formateDate(new Date());\r\n      this.setState({ currentDate });\r\n    }, 1000);\r\n  }\r\n\r\n  /**\r\n   * 使用递归查询获得匹配的title\r\n   * 使用 forof 循环，而不是 foreach 因为 foreach 无法在获得匹配内容后跳出，必须循环全部，造成资源浪费\r\n   */\r\n  recursiveQueryTitle = (menuList, pathname) => {\r\n    // eslint-disable-next-line no-unused-vars\r\n    for (const item of menuList) {\r\n      if (pathname.indexOf(item.key) === 0) {\r\n        return item;\r\n      }\r\n\r\n      if (item.children) {\r\n        const citem = this.recursiveQueryTitle(item.children, pathname);\r\n        if (citem) {\r\n          return citem;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 采用递归查询获得匹配的 title\r\n   */\r\n  getTitle = () => {\r\n    const { pathname } = this.props.location;\r\n    const memu = this.recursiveQueryTitle(menuList, pathname);\r\n    const title = memu ? memu.title : \"\";\r\n    return title;\r\n  };\r\n\r\n  /**\r\n   * antd 自带的 modal 来实现对话框退出\r\n   * onOk 默认为普通函数，普通函数的 this 对象为使用时的 this，则无法获得 props 属性\r\n   * 采用箭头函数方式绑定定义时的this\r\n   */\r\n  loginOut = () => {\r\n    confirm({\r\n      title: \"是否退出登陆?\",\r\n      okText: \"确认\",\r\n      cancelText: \"取消\",\r\n      //content: \"将跳转到\",\r\n      onOk: () => {\r\n        this.props.resetUser();\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * 由于路由跳转，每次 title 都可能变化，所以要不断更新获得匹配的 title\r\n   * 使用 自定义 LinkButton ，解决 a 标签无效的 href 属性报警\r\n   */\r\n  render() {\r\n    console.log(\"header render()\");\r\n    const { currentDate, dayPictureUrl, weather } = this.state;\r\n    //const title = this.getTitle();\r\n    const { user, headTitle } = this.props;\r\n    return (\r\n      <div className=\"header\">\r\n        <div className=\"header-top\">\r\n          <span>欢迎,{user.username}</span>\r\n          <LinkButton onClick={this.loginOut}>退出</LinkButton>\r\n        </div>\r\n        <div className=\"header-bottom\">\r\n          <div className=\"header-bottom-left\">{headTitle}</div>\r\n          <div className=\"header-bottom-right\">\r\n            <span>{currentDate}</span>\r\n            <img src={dayPictureUrl} alt=\"aa\"></img>\r\n            <span>{weather}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * 高阶组件包装 Header，传递 history/location/match属性\r\n */\r\nconst WrapHeader = withRouter(Header);\r\n\r\nexport default connect(\r\n  state => ({ headTitle: state.headTitle, user: state.user }),\r\n  { resetUser }\r\n)(WrapHeader);\r\n","import React, { Component } from \"react\";\r\nimport { Layout } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Switch, Route } from \"react-router-dom\";\r\n\r\nimport \"./admin.less\";\r\n\r\nimport Home from \"../home/home\";\r\nimport Category from \"../category/category\";\r\nimport Bar from \"../charts/bar\";\r\nimport Line from \"../charts/line\";\r\nimport Pie from \"../charts/pie\";\r\nimport Order from \"../order/order\";\r\nimport Product from \"../product/product\";\r\nimport Role from \"../role/role\";\r\nimport User from \"../user/user\";\r\nimport NotFound from \"../not-fount/not-found\";\r\nimport LeftNav from \"../../components/left-nav\";\r\nimport Header from \"../../components/header\";\r\n\r\nconst { Footer, Sider, Content } = Layout;\r\nclass Admin extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    const { user } = this.props;\r\n    if (!user._id) {\r\n      return <Redirect to=\"/login\"></Redirect>;\r\n    }\r\n\r\n    return (\r\n      <Layout className=\"admin\">\r\n        <Sider>\r\n          <LeftNav />\r\n        </Sider>\r\n        <Layout>\r\n          <Header />\r\n          <Content style={{ backgroundColor: \"#fff\", margin: 20 }}>\r\n            <Switch>\r\n              <Redirect from=\"/\" exact to=\"/home\" />\r\n              <Route path=\"/home\" component={Home} />\r\n              <Route path=\"/category\" component={Category} />\r\n              <Route path=\"/product\" component={Product} />\r\n              <Route path=\"/user\" component={User} />\r\n              <Route path=\"/role\" component={Role} />\r\n              <Route path=\"/charts/bar\" component={Bar} />\r\n              <Route path=\"/charts/pie\" component={Pie} />\r\n              <Route path=\"/charts/line\" component={Line} />\r\n              <Route path=\"/order\" component={Order} />\r\n              <Route component={NotFound} />\r\n            </Switch>\r\n          </Content>\r\n          <Footer style={{ textAlign: \"center\", color: \"#cccc\" }}>\r\n            推荐使用谷歌浏览器,获得更好的使用体验\r\n          </Footer>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(state => ({ user: state.user }))(Admin);\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\n\r\nimport Login from './pages/login/login';\r\nimport Admin from './pages/admin/admin';\r\nclass App extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route path=\"/login\" component={Login}></Route>\r\n          <Route path=\"/\" component={Admin}></Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","/**\r\n * 根据老的state和传入的action,生成新的state\r\n */\r\nimport { combineReducers } from \"redux\";\r\n\r\nimport {\r\n  SET_HEAD_TITLE,\r\n  RECIVER_USER,\r\n  SHOW_MSG,\r\n  RESET_USER\r\n} from \"./action-types\";\r\nimport storageUtils from \"../utils/storageUtils\";\r\n\r\nconst initHeadTitle = \"\";\r\nconst headTitle = (state = initHeadTitle, action) => {\r\n  switch (action.type) {\r\n    case SET_HEAD_TITLE:\r\n      return action.headTitle;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst initUser = storageUtils.getUser();\r\nconst user = (state = initUser, action) => {\r\n  switch (action.type) {\r\n    case RECIVER_USER:\r\n      return action.user;\r\n    case SHOW_MSG:\r\n      const errorMessage = action.errorMessage;\r\n      return { ...state, errorMessage };\r\n    case RESET_USER:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/**\r\n * 向外默认的暴露的是合并产生的总的reduce函数\r\n * 管理的 总和state的结构是\r\n * {\r\n *  headerTitle:'首页'，\r\n * user:{}\r\n * }\r\n */\r\nexport default combineReducers({\r\n  headTitle,\r\n  user\r\n});\r\n","/**\r\n * redux 最核心的管理对象store\r\n */\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport reducers from \"./reducers\";\r\n\r\nexport default createStore(\r\n  reducers,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport App from \"./app\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ba1f87ec.png\";"],"sourceRoot":""}